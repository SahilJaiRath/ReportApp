package model.service;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import java.sql.Timestamp;
import java.sql.Types;

import java.util.Date;


import javax.naming.InitialContext;

import javax.sql.DataSource;


import model.service.common.AppModule;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 08 11:44:54 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }

    /**
     * Container's getter for PartyBalancesVO1.
     * @return PartyBalancesVO1
     */
    public ViewObjectImpl getPartyBalancesVO1() {
        return (ViewObjectImpl) findViewObject("PartyBalancesVO1");
    }
    
    public void callPartBalProc(String LV_UNIT,String LV_GL_TYPE,String LV_SID,String LV_YEAR,Date FRDATE,Date TODATE) {
        
          ViewObjectImpl vo = this.getPartyBalancesVO1();
          System.out.println(LV_GL_TYPE + "--" + LV_UNIT + "--" + LV_SID + "--" + FRDATE + "--" + TODATE+"--"+LV_YEAR);
          if (LV_GL_TYPE != null && LV_UNIT != null && LV_SID != null && FRDATE != null && TODATE != null) {
              System.out.println("Inside condition!");
              try {

                  callStoredProcedure("terms.PARTY_BAL_PROC_APX(?,?,?,?,?,?)", new Object[]
                                      { LV_UNIT, LV_GL_TYPE, LV_SID, LV_YEAR, FRDATE, TODATE });         
                 // vo.setNamedWhereClauseParam("bindModeType", "V");
                  vo.setNamedWhereClauseParam("bindSession", LV_SID);
                  vo.executeQuery();

              } catch (Exception e) {
                  e.printStackTrace();
              }
          }
               
           }
           
    
    protected void callStoredProcedure(String stmt, Object[] bindVars) {
        PreparedStatement st = null;
        try {
            // 1. Create a JDBC PreparedStatement for
            st = getDBTransaction().createPreparedStatement("begin " + stmt + ";end;", 0);
            if (bindVars != null) {
                // 2. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 3. Set the value of each bind variable in the statement
                    st.setObject(z + 1, bindVars[z]);
                }
            }
            // 4. Execute the statement
            st.executeUpdate();
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 5. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    /**
     * Container's getter for DummyVVO1.
     * @return DummyVVO1
     */
    public ViewObjectImpl getDummyVVO1() {
        return (ViewObjectImpl) findViewObject("DummyVVO1");
    }
    
    public void getData(){
        
        ViewObjectImpl VOI = this.getPartyBalancesVO1();
        VOI.clearCache();
        VOI.executeQuery();
        
        ViewCriteria hVc = this.getPartyBalancesVO1().getViewCriteria("PartyBalancesVOCriteria");
        this.getPartyBalancesVO1().applyViewCriteria(hVc, false);
        this.getPartyBalancesVO1().setNamedWhereClauseParam("bindunit", 0000);
       // VOI.executeQuery();
       // VOI.clearCache();
        
        this.getPartyBalancesVO1().executeQuery();
    }

    /**
     * Container's getter for GeneralLedgerVO1.
     * @return GeneralLedgerVO1
     */
    public ViewObjectImpl getGeneralLedgerVO1() {
        return (ViewObjectImpl) findViewObject("GeneralLedgerVO1");
    }
    public void callGenLedgerproc(String LV_UNIT,String LV_GLCD,String LV_SID,String LV_YEAR,Date FRDATE,Date TODATE){
        ViewObjectImpl vo = this.getGeneralLedgerVO1();
        System.out.println(LV_GLCD + "--" + LV_UNIT + "--" + LV_SID + "--" + FRDATE + "--" + TODATE+"--"+LV_YEAR);
        
        
        if (LV_GLCD != null && LV_UNIT != null && LV_SID != null && FRDATE != null && TODATE != null) {
            System.out.println("Inside condition!");
            try {

                callStoredProcedure("terms.GEN_LED_PROC_APX(?,?,?,?,?,?)", new Object[]
                                    { LV_UNIT, LV_GLCD, LV_SID, LV_YEAR, FRDATE, TODATE });         
               // vo.setNamedWhereClauseParam("bindModeType", "V");
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
    }
    
        }
     }

    /**
     * Container's getter for GlCodeVVO1.
     * @return GlCodeVVO1
     */
    public ViewObjectImpl getGlCodeVVO1() {
        return (ViewObjectImpl) findViewObject("GlCodeVVO1");
    }
    private Connection getConnection() {
        Connection connection = null;
        try {
            InitialContext context = new InitialContext();
            DataSource dataSource = (DataSource) context.lookup("java:comp/env/jdbc/APPLICATIONDBDS");
            connection = dataSource.getConnection();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return connection;
    }

    private static final ADFLogger logger = ADFLogger.createADFLogger(AppModuleImpl.class);

    /**
     * Container's getter for UserSessionVO1.
     * @return UserSessionVO1
     */
    public ViewObjectImpl getUserSessionVO1() {
        return (ViewObjectImpl) findViewObject("UserSessionVO1");
    }

    /**
     * Container's getter for DBSidSeqVVO1.
     * @return DBSidSeqVVO1
     */
    public ViewObjectImpl getDBSidSeqVVO1() {
        return (ViewObjectImpl) findViewObject("DBSidSeqVVO1");
    }
    
    
    
    /**
     * Container's getter for SubLedgerTrialVO1.
     * @return SubLedgerTrialVO1
     */
    public ViewObjectImpl getSubLedgerTrialVO1() {
        return (ViewObjectImpl) findViewObject("SubLedgerTrialVO1");
    }


    public void callSubLedgerproc(String LV_UNIT,String LV_GLCD,String LV_SID,String LV_YEAR,Date FRDATE,Date TODATE){
        ViewObjectImpl vo = this.getSubLedgerTrialVO1();
        System.out.println(LV_GLCD + "--" + LV_UNIT + "--" + LV_SID + "--" + FRDATE + "--" + TODATE+"--"+LV_YEAR);
        
        
        if (LV_GLCD != null && LV_UNIT != null && LV_SID != null && FRDATE != null && TODATE != null) {
            System.out.println("Inside condition!");
            try {

                callStoredProcedure("terms.SUB_LED_TRIAL_PROC_APX(?,?,?,?,?,?)", new Object[]
                                    { LV_UNIT, LV_GLCD, LV_SID, LV_YEAR, FRDATE, TODATE });         
               // vo.setNamedWhereClauseParam("bindModeType", "V");
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
    }
    
        }
     }


    /**
     * Container's getter for LocVVO1.
     * @return LocVVO1
     */
    public ViewObjectImpl getLocVVO1() {
        return (ViewObjectImpl) findViewObject("LocVVO1");
    }

    /**
     * Container's getter for WIPStockVO1.
     * @return WIPStockVO1
     */
    public ViewObjectImpl getWIPStockVO1() {
        return (ViewObjectImpl) findViewObject("WIPStockVO1");
     
    }
    public void callWIPStock(String LV_UNIT,String LOC,Date FRDATE,Date TODATE){
        ViewObjectImpl vo = this.getWIPStockVO1();
        System.out.println(LOC + "--" + LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
        
    if (LOC != null && LV_UNIT != null &&  FRDATE != null && TODATE != null) {
        System.out.println("Inside condition!");
    try {

        
       
        vo.setNamedWhereClauseParam("P40_FROM_DT", FRDATE);
        vo.setNamedWhereClauseParam("P40_LOC", LOC);
        vo.setNamedWhereClauseParam("P40_TO_DT", TODATE);
        vo.setNamedWhereClauseParam("P40_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
}
}
    }

    /**
     * Container's getter for PendingFinishGoodsBatchWiseVO1.
     * @return PendingFinishGoodsBatchWiseVO1
     */
    public ViewObjectImpl getPendingFinishGoodsBatchWiseVO1() {
        return (ViewObjectImpl) findViewObject("PendingFinishGoodsBatchWiseVO1");
    }
    
    public void callPendingFinishGoodsBatchWise (String LV_UNIT){
        ViewObjectImpl vo = this.getPendingFinishGoodsBatchWiseVO1();
    System.out.println(LV_UNIT + "--");
    
    if ( LV_UNIT != null) {
        System.out.println("Inside condition!");
    try {

        
        vo.setNamedWhereClauseParam("p36_unit_code", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    
                                        
                                    
        
        
}
    }
    }

    /**
     * Container's getter for B2bSaleInvoiceRegisteredVO1.
     * @return B2bSaleInvoiceRegisteredVO1
     */
    public ViewObjectImpl getB2bSaleInvoiceRegisteredVO1() {
        return (ViewObjectImpl) findViewObject("B2bSaleInvoiceRegisteredVO1");
    }
    
    public void callB2bSaleInvoiceRegistered(String LV_UNIT,String CUSTOMER ,Date FRDATE,Date TODATE){
        ViewObjectImpl vo = this.getB2bSaleInvoiceRegisteredVO1();
        System.out.println(CUSTOMER + "--" + LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
        
    if (CUSTOMER != null && LV_UNIT != null &&  FRDATE != null && TODATE != null) {
        System.out.println("Inside condition!");
    try {

        
       
        vo.setNamedWhereClauseParam("P174_FROM_DATE", FRDATE);
        vo.setNamedWhereClauseParam("P174_CUSTOMER", CUSTOMER);
        vo.setNamedWhereClauseParam("P174_TO_DATE", TODATE);
        vo.setNamedWhereClauseParam("P174_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }

    /**
     * Container's getter for StockLedgerVO1.
     * @return StockLedgerVO1
     */
    public ViewObjectImpl getStockLedgerVO1() {
        return (ViewObjectImpl) findViewObject("StockLedgerVO1");
    }
    
    public void callStockLedger3(String LV_UNIT,String LV_ITEM_CD,String LV_SID,String LV_LOC,Date FRDATE,Date TODATE,
                             String LV_GROUP_CD, String LV_SUB_GROUP_CD ){
        ViewObjectImpl vo = this.getStockLedgerVO1();
        System.out.println( LV_UNIT + "--" + LV_SID + "--" + FRDATE + "--" + TODATE+"--"+LV_ITEM_CD + "--" + LV_LOC+ "---"
                           /*+ LV_GROUP_CD +"--" + LV_SUB_GROUP_CD + "--"*/);
        
        
        if ( LV_UNIT != null && LV_SID != null && FRDATE != null && TODATE != null && LV_ITEM_CD != null &&
        
                         LV_LOC != null /*&& LV_GROUP_CD !=null && LV_SUB_GROUP_CD !=null */ ) {
            System.out.println("Inside condition!");
            try {

                callStoredProcedure("terms.DPR_STOCK_VAL_WOPN(?,?,?,?,?,?)", new Object[]
                                    { FRDATE,TODATE,LV_LOC,LV_ITEM_CD, LV_SID,LV_UNIT });         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.setNamedWhereClauseParam("P70_FR_Date", FRDATE);
                vo.setNamedWhereClauseParam("P70_TO_Date", TODATE);
//                vo.setNamedWhereClauseParam("P70_GROUP_CODE", LV_GROUP_CD);
                vo.setNamedWhereClauseParam("P70_ITEM", LV_ITEM_CD);
//                vo.setNamedWhereClauseParam("P70_SUB_GROUP", LV_SUB_GROUP_CD);
                vo.setNamedWhereClauseParam("p70_unit", LV_UNIT);
//                vo.setNamedWhereClauseParam("P70_UNIT", LV_LOC);
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
    }
    
        }
     }


    /**
     * Container's getter for B2CSaleInvoiceUnRegisteredVO1.
     * @return B2CSaleInvoiceUnRegisteredVO1
     */
    public ViewObjectImpl getB2CSaleInvoiceUnRegisteredVO1() {
        return (ViewObjectImpl) findViewObject("B2CSaleInvoiceUnRegisteredVO1");
    }
    
    public void callB2CSaleInvoiceUnRegistered(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getB2CSaleInvoiceUnRegisteredVO1();
          System.out.println( LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P175_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P175_TO_DATE", TODATE);
          vo.setNamedWhereClauseParam("P175_UNIT", LV_UNIT);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
}

    /**
     * Container's getter for LocProdWipVVO1.
     * @return LocProdWipVVO1
     */
    public ViewObjectImpl getLocProdWipVVO1() {
        return (ViewObjectImpl) findViewObject("LocProdWipVVO1");
    }

    /**
     * Container's getter for SaleregisterDetailVO1.
     * @return SaleregisterDetailVO1
     */
    public ViewObjectImpl getSaleregisterDetailVO1() {
        return (ViewObjectImpl) findViewObject("SaleregisterDetailVO1");
    }
    
    public void callSaleRegisterDetail4(String LV_UNIT, Integer LV_SID,String LV_INC_CAN, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getSaleregisterDetailVO1();
    String LV_INV_TYPE = "";
    String LV_CUST = "";
        System.out.println(LV_UNIT + "--" + LV_INC_CAN +"---" + FRDATE +"--" + TODATE +"--"  /*LV_INV_TYPE + "--" + LV_CUST + "--"*/ );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null /*&& LV_INV_TYPE ==null && LV_CUST==null */){
            
            
            System.out.println("inside condition");
            
            try {

                callStoredProcedure("terms.Sales_Rep_Proc_Det(?,?,?,?,?,?)", new Object[]
                                    { FRDATE,TODATE,LV_UNIT,LV_INV_TYPE, LV_CUST ,LV_SID});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.setNamedWhereClauseParam("P12_INC_CAN", LV_INC_CAN);
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
}

    /**
     * Container's getter for StockStatusVO1.
     * @return StockStatusVO1
     */
    public ViewObjectImpl getStockStatusVO1() {
        return (ViewObjectImpl) findViewObject("StockStatusVO1");
    }
    
    public void callStockStatus(String LV_UNIT,String LV_ITEM_CD, String LV_FIN_YEAR){
        ViewObjectImpl vo = this.getStockStatusVO1();
        System.out.println(LV_UNIT + "--" + LV_ITEM_CD + "--"   + LV_FIN_YEAR + "--" );
        
    if ( LV_UNIT != null &&  LV_ITEM_CD != null && LV_FIN_YEAR != null) {
        System.out.println("Inside condition!");
    try {

        
       
        
        vo.setNamedWhereClauseParam("P14_FIN_YEAR", LV_FIN_YEAR);
        vo.setNamedWhereClauseParam("P14_ITEM", LV_ITEM_CD);
        vo.setNamedWhereClauseParam("P14_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    
    
}

    /**
     * Container's getter for PurchaseRegisterIncludingDRandCRNoteVO1.
     * @return PurchaseRegisterIncludingDRandCRNoteVO1
     */
    public ViewObjectImpl getPurchaseRegisterIncludingDRandCRNoteVO1() {
        return (ViewObjectImpl) findViewObject("PurchaseRegisterIncludingDRandCRNoteVO1");
    }
    
    public void callPurchaseRegisterIncludingDRandCRNote(String LV_UNIT,String LV_DOC_TYPE,Date FRDATE,Date TODATE){
        ViewObjectImpl vo = this.getPurchaseRegisterIncludingDRandCRNoteVO1();
        System.out.println(LV_DOC_TYPE + "--" + LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
        
    if (LV_DOC_TYPE != null && LV_UNIT != null &&  FRDATE != null && TODATE != null) {
        System.out.println("Inside condition!");
    try {

        
       
        vo.setNamedWhereClauseParam("P254_FROM_DATE", FRDATE);
        vo.setNamedWhereClauseParam("P254_DOC_TYPE", LV_DOC_TYPE);
        vo.setNamedWhereClauseParam("P254_TO_DATE", TODATE);
        vo.setNamedWhereClauseParam("P254_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }


    /**
     * Container's getter for DebitCreditNoteEntryDetailVO1.
     * @return DebitCreditNoteEntryDetailVO1
     */
    public ViewObjectImpl getDebitCreditNoteEntryDetailVO1() {
        return (ViewObjectImpl) findViewObject("DebitCreditNoteEntryDetailVO1");
    }
    
    public void callDebitCreditNoteEntryDetail(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getDebitCreditNoteEntryDetailVO1();
          System.out.println( LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P250_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P250_TO_DATE", TODATE);
          vo.setNamedWhereClauseParam("P250_UNIT_CODE", LV_UNIT);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for ProcessProductionVO1.
     * @return ProcessProductionVO1
     */
    public ViewObjectImpl getProcessProductionVO1() {
        return (ViewObjectImpl) findViewObject("ProcessProductionVO1");
    }
    
    public void callProcessProduction(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getProcessProductionVO1();
          System.out.println( LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P32_FR_DT", FRDATE);
      
          vo.setNamedWhereClauseParam("P32_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P32_UNIT", LV_UNIT);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for AssemblyProductionSummaryVO1.
     * @return AssemblyProductionSummaryVO1
     */
    public ViewObjectImpl getAssemblyProductionSummaryVO1() {
        return (ViewObjectImpl) findViewObject("AssemblyProductionSummaryVO1");
    }
    
    public void callAssemblyProductionSummary(String LV_UNIT,Date FRDATE,Date TODATE, String LV_PRODUCT){
          ViewObjectImpl vo = this.getAssemblyProductionSummaryVO1();
          System.out.println( LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--" + LV_PRODUCT + "--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_PRODUCT !=null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P142_FROM", FRDATE);
      
          vo.setNamedWhereClauseParam("P142_TO", TODATE);
          vo.setNamedWhereClauseParam("P142_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P142_PROD", LV_PRODUCT);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for GatePassChallanVO1.
     * @return GatePassChallanVO1
     */
    public ViewObjectImpl getGatePassChallanVO1() {
        return (ViewObjectImpl) findViewObject("GatePassChallanVO1");
    }
    public void callGatePassChallan(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getGatePassChallanVO1();
          System.out.println( LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--" );
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P11_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P11_TO_DATE", TODATE);
          vo.setNamedWhereClauseParam("P11_UNIT", LV_UNIT);
          
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for PendingGateEntryForSRVVO1.
     * @return PendingGateEntryForSRVVO1
     */
    public ViewObjectImpl getPendingGateEntryForSRVVO1() {
        return (ViewObjectImpl) findViewObject("PendingGateEntryForSRVVO1");
    }
    
    public void callPendingGateEntryForSRV(String LV_UNIT){
          ViewObjectImpl vo = this.getPendingGateEntryForSRVVO1();
          System.out.println( LV_UNIT + "--"  );
          
      if (LV_UNIT != null  ) {
          System.out.println("Inside condition!");
      try {

          
         
         
          vo.setNamedWhereClauseParam("P46_UNIT", LV_UNIT);
          
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for DispatchAdviceDetailVO1.
     * @return DispatchAdviceDetailVO1
     */
    public ViewObjectImpl getDispatchAdviceDetailVO1() {
        return (ViewObjectImpl) findViewObject("DispatchAdviceDetailVO1");
    }
    public void callDispatchAdviceDetail(String LV_DA_NO,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getDispatchAdviceDetailVO1();
          System.out.println( LV_DA_NO + "--"  + "--" + FRDATE + "--" + TODATE+"--" );
          
      if (LV_DA_NO != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P217_FR_DT", FRDATE);
      
          vo.setNamedWhereClauseParam("P217_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P217_DA_NO", LV_DA_NO);
          
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    

    /**
     * Container's getter for FGExpiredStockVO1.
     * @return FGExpiredStockVO1
     */
    public ViewObjectImpl getFGExpiredStockVO1() {
        return (ViewObjectImpl) findViewObject("FGExpiredStockVO1");
    }
    
    public void callFGExpiredStock(String LV_UNIT){
          ViewObjectImpl vo =this.getFGExpiredStockVO1();
          System.out.println( LV_UNIT + "--"  );
          
      if (LV_UNIT != null  ) {
          System.out.println("Inside condition!");
      try {

          
         
         
          vo.setNamedWhereClauseParam("p262_unit_code", LV_UNIT);
          
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }
    
    public void getFGdata(){
        
        ViewObjectImpl vo=this.getFGExpiredStockVO1();
        vo.setNamedWhereClauseParam("p262_unit_code", 2);
        vo.executeQuery();
        
        }

    /**
     * Container's getter for SaleOrderDetailVO1.
     * @return SaleOrderDetailVO1
     */
    public ViewObjectImpl getSaleOrderDetailVO1() {
        return (ViewObjectImpl) findViewObject("SaleOrderDetailVO1");
    }
    
    public void callSaleOrderDetail(String LV_UNIT,Date FRDATE,Date TODATE, String LV_PoNo){
          ViewObjectImpl vo = this.getSaleOrderDetailVO1();
          System.out.println( LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--" + LV_PoNo + "--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_PoNo !=null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P182_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P182_TO_DATE", TODATE);
          vo.setNamedWhereClauseParam("P182_UNIT_CODE", LV_UNIT);
          vo.setNamedWhereClauseParam("P182_PO_NO", LV_PoNo);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for FGTransferVO1.
     * @return FGTransferVO1
     */
    public ViewObjectImpl getFGTransferVO1() {
        return (ViewObjectImpl) findViewObject("FGTransferVO1");
    }
    
    public void callFGTransfer(String LV_UNIT,Date FRDATE,Date TODATE, String LV_ChallanType){
          ViewObjectImpl vo = this.getFGTransferVO1();
          System.out.println( LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--" + LV_ChallanType + "--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_ChallanType !=null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P183_FROM", FRDATE);
      
          vo.setNamedWhereClauseParam("P183_TO", TODATE);
          vo.setNamedWhereClauseParam("P183_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P183_CHALLAN_TYPE", LV_ChallanType);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }
    
    /**
     * Container's getter for CollectionReportVO1.
     * @return CollectionReportVO1
     */
    public ViewObjectImpl getCollectionReportVO1() {
        return (ViewObjectImpl) findViewObject("CollectionReportVO1");
    }

    public void callCollectionReport(String LV_UNIT,Date FRDATE,Date TODATE, String LV_CollectionCust){
          ViewObjectImpl vo = this.getCollectionReportVO1();
          System.out.println( LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--" + LV_CollectionCust + "--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_CollectionCust !=null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P41_FR_DT", FRDATE);
      
          vo.setNamedWhereClauseParam("P41_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P41_UNIT_CD", LV_UNIT);
          vo.setNamedWhereClauseParam("P41_CUST_CD", LV_CollectionCust);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for BankReconciliationVO1.
     * @return BankReconciliationVO1
     */
    public ViewObjectImpl getBankReconciliationVO1() {
        return (ViewObjectImpl) findViewObject("BankReconciliationVO1");
    }
    
    public void callBankRecociliation(String LV_GL,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getBankReconciliationVO1();
          System.out.println( LV_GL + "--"  + "--" + FRDATE + "--" + TODATE+"--" );
          
      if (LV_GL != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P43_FDT", FRDATE);
      
          vo.setNamedWhereClauseParam("P43_SDT", TODATE);
          vo.setNamedWhereClauseParam("P43_GL", LV_GL);
          
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for DebitCreditNoteVO1.
     * @return DebitCreditNoteVO1
     */
    public ViewObjectImpl getDebitCreditNoteVO1() {
        return (ViewObjectImpl) findViewObject("DebitCreditNoteVO1");
    }
    
    public void callDebitCreditNote(String LV_TYPE,Date FRDATE,Date TODATE, String LV_UNIT){
          ViewObjectImpl vo = this.getDebitCreditNoteVO1();
          System.out.println( LV_TYPE + "--"  + LV_UNIT+"--" + FRDATE + "--" + TODATE+"--"   );
          
      if (LV_TYPE != null &&  FRDATE != null && TODATE != null && LV_UNIT !=null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P33_FDT", FRDATE);
      
          vo.setNamedWhereClauseParam("P33_TDT", TODATE);
          vo.setNamedWhereClauseParam("P33_TYPE", LV_TYPE);
          vo.setNamedWhereClauseParam("P33_UNIT", LV_UNIT);
          
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for TDSVVO1.
     * @return TDSVVO1
     */
    public ViewObjectImpl getTDSVVO1() {
        return (ViewObjectImpl) findViewObject("TDSVVO1");
    }
    
    
    
    public void callTDSReport(String LV_UNIT, Integer LV_SID, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getTDSVVO1();
    String LV_TDS_GL = "";
    String LV_SECTION = "";
    String LV_VEN_TYPE = "";
        System.out.println(LV_UNIT + "--" + FRDATE +"--" + TODATE +"--" + LV_SID +"--"  );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null && LV_SID!=null){
            
            
            System.out.println("inside condition");
            
            try {
//                TDS_DEPOSIT_PROC(unit,fdt,tdt,LV_TDS_GL,LV_SECTION ,LV_VEN_TYPE ,SID);
                callStoredProcedure("terms.TDS_DEPOSIT_PROC(?,?,?,?,?,?,?)", new Object[]
                                    {LV_UNIT, FRDATE,TODATE,LV_TDS_GL, LV_SECTION ,LV_VEN_TYPE,LV_SID});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for HSNSummaryVO1.
     * @return HSNSummaryVO1
     */
    public ViewObjectImpl getHSNSummaryVO1() {
        return (ViewObjectImpl) findViewObject("HSNSummaryVO1");
    }
    
    public void callHSNSummary(String LV_TYPE,Date FRDATE,Date TODATE, String LV_UNIT){
          ViewObjectImpl vo = this.getHSNSummaryVO1();
          System.out.println(  LV_UNIT+"--" + FRDATE + "--" + TODATE+"--"   );
          
      if (  FRDATE != null && TODATE != null && LV_UNIT !=null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P176_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P176_TO_DATE", TODATE);
       
          vo.setNamedWhereClauseParam("P176_UNIT", LV_UNIT);
          
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }





    /**
     * Container's getter for VoucherWiseDebitCreditVVO1.
     * @return VoucherWiseDebitCreditVVO1
     */
    public ViewObjectImpl getVoucherWiseDebitCreditVVO1() {
        return (ViewObjectImpl) findViewObject("VoucherWiseDebitCreditVVO1");
    }
    
    public void callVoucherWiseDebitCredit(String LV_UNIT){
          ViewObjectImpl vo = this.getVoucherWiseDebitCreditVVO1();
          System.out.println( LV_UNIT + "--"  );
          
      if (LV_UNIT != null ) {
          System.out.println("Inside condition!");
      try {

          
         
        
          vo.setNamedWhereClauseParam("P222_UNIT", LV_UNIT);

         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for ConsolidatePurchaseDetailforTDSPANBasedVVO1.
     * @return ConsolidatePurchaseDetailforTDSPANBasedVVO1
     */
    public ViewObjectImpl getConsolidatePurchaseDetailforTDSPANBasedVVO1() {
        return (ViewObjectImpl) findViewObject("ConsolidatePurchaseDetailforTDSPANBasedVVO1");
    }
    
    
    public void callConsolidatePurchaseDetailforTDSPANBased(Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getConsolidatePurchaseDetailforTDSPANBasedVVO1();
          System.out.println( FRDATE + "--" + TODATE + "--"  );
          
      if (FRDATE != null && TODATE != null) {
          System.out.println("Inside condition!");
      try {
          vo.setNamedWhereClauseParam("P261_FROM_DATE", FRDATE);
          vo.setNamedWhereClauseParam("P261_TO_DATE", TODATE);

         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for SaleRegisterDetailIncDrAndCrVO1.
     * @return SaleRegisterDetailIncDrAndCrVO1
     */
    public ViewObjectImpl getSaleRegisterDetailIncDrAndCrVO1() {
        return (ViewObjectImpl) findViewObject("SaleRegisterDetailIncDrAndCrVO1");
    }
    public void callSaleRegisterDetailIncDrAndCr(String LV_UNIT, Integer LV_SID,String LV_STATUS, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getSaleRegisterDetailIncDrAndCrVO1();
    String LV_INV_TYPE = "";
    String LV_CUST = "";
        System.out.println(LV_UNIT + "--" + LV_STATUS +"---" + FRDATE +"--" + TODATE +"--"  /*LV_INV_TYPE + "--" + LV_CUST + "--"*/ );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null /*&& LV_INV_TYPE ==null && LV_CUST==null */){
            
            
            System.out.println("inside condition");
            
            try {

                callStoredProcedure("terms.Sales_Rep_Proc_Det(?,?,?,?,?,?)", new Object[]
                                    { FRDATE,TODATE,LV_UNIT,LV_INV_TYPE, LV_CUST ,LV_SID});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.setNamedWhereClauseParam("P239_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P239_TO_DATE", TODATE);
                vo.setNamedWhereClauseParam("P239_STATUS", LV_STATUS);
                vo.setNamedWhereClauseParam("P239_FROM_DATE", FRDATE);
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }
    
    /**
     * Container's getter for AssemblyJobCardStatusVO1.
     * @return AssemblyJobCardStatusVO1
     */
    public ViewObjectImpl getAssemblyJobCardStatusVO1() {
        return (ViewObjectImpl) findViewObject("AssemblyJobCardStatusVO1");
    }


    public void callAssemblyJobCardStatusReport(String LV_UNIT, String LV_Asmbly_JCNo, String LV_AsmblyJC_Prod_Cd,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getAssemblyJobCardStatusVO1();
          System.out.println(LV_UNIT + "--"  + LV_Asmbly_JCNo + "--"  + LV_AsmblyJC_Prod_Cd + "--" + FRDATE + "--" + TODATE + "--"  );
          
      if (LV_UNIT != null && LV_Asmbly_JCNo != null && LV_AsmblyJC_Prod_Cd != null && FRDATE != null && TODATE != null) {
          System.out.println("Inside condition!");
      try {
          vo.setNamedWhereClauseParam("P143_JC_NO", LV_Asmbly_JCNo);
          vo.setNamedWhereClauseParam("P143_PROD_CD", LV_AsmblyJC_Prod_Cd);
          vo.setNamedWhereClauseParam("P143_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P143_FROM_DT", FRDATE);
          vo.setNamedWhereClauseParam("P143_TO_DT", TODATE);

         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }
  


    /**
     * Container's getter for BillOfMaterialVO1.
     * @return BillOfMaterialVO1
     */
    public ViewObjectImpl getBillOfMaterialVO1() {
        return (ViewObjectImpl) findViewObject("BillOfMaterialVO1");
    }
    public void callBillOfMaterial(String LV_BOM_PRODUCT){
        ViewObjectImpl vo = this.getBillOfMaterialVO1();

        System.out.println(LV_BOM_PRODUCT + "--" );
        
        if (LV_BOM_PRODUCT != null  ){
            
            
            System.out.println("inside condition");
            
            try {
                
                vo.setNamedWhereClauseParam("P144_PROD", LV_BOM_PRODUCT);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


  

    /**
     * Container's getter for WIPLedgerVO1.
     * @return WIPLedgerVO1
     */
    public ViewObjectImpl getWIPLedgerVO1() {
        return (ViewObjectImpl) findViewObject("WIPLedgerVO1");
    }
    
    public void callWIPLedgerreport(String LV_UNIT, String LV_LocWip,String LV_WIPLgr_PrcssFilter, String LV_WIPLgr_ItemFilter, Integer LV_SID, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getWIPLedgerVO1();
    
        System.out.println(LV_UNIT + "--" + LV_SID +"---" + FRDATE +"--" + TODATE +"--"  + LV_LocWip + "--" + LV_WIPLgr_PrcssFilter + "--" + LV_WIPLgr_ItemFilter + "--" );
        
        if (LV_UNIT != null && FRDATE != null && TODATE != null && LV_SID != null && LV_LocWip != null  && LV_WIPLgr_PrcssFilter != null && LV_WIPLgr_ItemFilter != null){
            
            
            System.out.println("inside condition");
            
            try {
    //                WIP_DATA_PROC (:P147_ITEM ,:P147_LOC_CD ,:P147_FR_DT,:P147_TO_DT ,:P147_UNIT ,:P147_PROC ,SES ,'WIP');
                callStoredProcedure("terms.WIP_DATA_PROC(?,?,?,?,?,?,?,?)", new Object[]
                                    { LV_WIPLgr_ItemFilter, LV_LocWip, FRDATE, TODATE, LV_UNIT, LV_WIPLgr_PrcssFilter, LV_SID, LV_WIPLgr_ItemFilter });         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
    //                vo.setNamedWhereClauseParam("P239_UNIT", LV_UNIT);
    //                vo.setNamedWhereClauseParam("P239_TO_DATE", TODATE);
    //                vo.setNamedWhereClauseParam("P239_STATUS", LV_STATUS);
    //                vo.setNamedWhereClauseParam("P239_FROM_DATE", FRDATE);
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


   


    /**
     * Container's getter for BOMTreeVO1.
     * @return BOMTreeVO1
     */
    public ViewObjectImpl getBOMTreeVO1() {
        return (ViewObjectImpl) findViewObject("BOMTreeVO1");
    }
    
    public void callBOMTree(String LV_BOMTREE_PRD_CD, /*String LV_BOMTREE_BATCHQTY,*/ String LV_REQUESTQTY){
        ViewObjectImpl vo = this.getBOMTreeVO1();

        System.out.println(LV_BOMTREE_PRD_CD + "--"/* +LV_BOMTREE_BATCHQTY+"--" */+ LV_REQUESTQTY + "--" );
        
        if (LV_BOMTREE_PRD_CD != null /*&& LV_BOMTREE_BATCHQTY != null*/ && LV_REQUESTQTY != null ){
            
            
            System.out.println("inside condition");
            
            try {
                
                vo.setNamedWhereClauseParam("P145_PROD", LV_BOMTREE_PRD_CD);
                vo.setNamedWhereClauseParam("P145_REQ_QTY", LV_REQUESTQTY);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for ItemWhereUsedVO1.
     * @return ItemWhereUsedVO1
     */
    public ViewObjectImpl getItemWhereUsedVO1() {
        return (ViewObjectImpl) findViewObject("ItemWhereUsedVO1");
    }
    
    
    public void callItemWhereused(String LV_PartNameFilter){
        ViewObjectImpl vo = this.getItemWhereUsedVO1();

        System.out.println(LV_PartNameFilter );
        
        if (LV_PartNameFilter != null ){
            
            
            System.out.println("inside condition");
            
            try {
                
                vo.setNamedWhereClauseParam("P169_PART_NAME", LV_PartNameFilter);
                
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for AssemblyProductionDetailVO1.
     * @return AssemblyProductionDetailVO1
     */
    public ViewObjectImpl getAssemblyProductionDetailVO1() {
        return (ViewObjectImpl) findViewObject("AssemblyProductionDetailVO1");
    }
    public void callAssemblyProductionDetail(String LV_UNIT, String LV_Product_cd, Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getAssemblyProductionDetailVO1();
          System.out.println(LV_UNIT + "--"  + LV_Product_cd + "--"   + "--" + FRDATE + "--" + TODATE + "--"  );
          
      if (LV_UNIT != null && LV_Product_cd !=  null && FRDATE != null && TODATE != null) {
          System.out.println("Inside condition!");
      try {
          vo.setNamedWhereClauseParam("P190_PROD_CD", LV_Product_cd);
          
          vo.setNamedWhereClauseParam("P190_UNIT_cd", LV_UNIT);
          vo.setNamedWhereClauseParam("P190_FROM_DT", FRDATE);
          vo.setNamedWhereClauseParam("P190_TO_DT", TODATE);

         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for BMRBOMTreeVO1.
     * @return BMRBOMTreeVO1
     */
    public ViewObjectImpl getBMRBOMTreeVO1() {
        return (ViewObjectImpl) findViewObject("BMRBOMTreeVO1");
    }
    
    
    public void callBMRBOMTree(String LV_UNIT, String LV_BMR_BT_BOMITEM){
          ViewObjectImpl vo = this.getBMRBOMTreeVO1();
          System.out.println( LV_UNIT + "--"  + LV_BMR_BT_BOMITEM + "--");
          
      if (LV_UNIT != null&& LV_BMR_BT_BOMITEM !=null) {
          System.out.println("Inside condition!");
      try {

          
          vo.setNamedWhereClauseParam("P199_BOM_ITEM", LV_BMR_BT_BOMITEM);
          vo.setNamedWhereClauseParam("P199_UNIT", LV_UNIT);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for GateEntryDetailVO1.
     * @return GateEntryDetailVO1
     */
    public ViewObjectImpl getGateEntryDetailVO1() {
        return (ViewObjectImpl) findViewObject("GateEntryDetailVO1");
    }
    
    public void callGateEntryDetail(String LV_UNIT,Date FRDATE,Date TODATE ){
          ViewObjectImpl vo = this.getGateEntryDetailVO1();
          System.out.println( LV_UNIT + "--"  + FRDATE+ "--" + TODATE + "--");
          
      if (LV_UNIT != null&& FRDATE !=null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
          vo.setNamedWhereClauseParam("P13_FROM_DATE", FRDATE);
          vo.setNamedWhereClauseParam("P13_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P13_TO_DATE", TODATE);
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for IssueDetailVO1.
     * @return IssueDetailVO1
     */
    public ViewObjectImpl getIssueDetailVO1() {
        return (ViewObjectImpl) findViewObject("IssueDetailVO1");
    }
    public void callIssueDetail(String LV_UNIT,Date FRDATE,Date TODATE ){
          ViewObjectImpl vo = this.getIssueDetailVO1();
          System.out.println( LV_UNIT + "--"  + FRDATE+ "--" + TODATE + "--");
          
      if (LV_UNIT != null&& FRDATE !=null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
          vo.setNamedWhereClauseParam("P20_NEW", FRDATE);
          vo.setNamedWhereClauseParam("P20_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P20_NEW_1", TODATE);
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for ReturnSlipVO1.
     * @return ReturnSlipVO1
     */
    public ViewObjectImpl getReturnSlipVO1() {
        return (ViewObjectImpl) findViewObject("ReturnSlipVO1");
    }
    
    
    
    public void callReturnSlip(String LV_UNIT,Date FRDATE,Date TODATE ){
          ViewObjectImpl vo = this.getReturnSlipVO1();
          System.out.println( LV_UNIT + "--"  + FRDATE+ "--" + TODATE + "--");
          
      if (LV_UNIT != null&& FRDATE !=null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
          vo.setNamedWhereClauseParam("P56_NEW_1", FRDATE);
          vo.setNamedWhereClauseParam("P56_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P56_NEW", TODATE);
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for NonMovingItemVO1.
     * @return NonMovingItemVO1
     */
    public ViewObjectImpl getNonMovingItemVO1() {
        return (ViewObjectImpl) findViewObject("NonMovingItemVO1");
    }
    public void callNonMovingItem(String LV_UNIT,Date LV_ASONDT,String LV_DAYS , String LV_GROUPCODE, String LV_NEW ,String LV_SUBGROUP  ){
          ViewObjectImpl vo = this.getNonMovingItemVO1();
          System.out.println( LV_UNIT + "--"  + LV_ASONDT+ "--" + LV_DAYS + "--" + LV_GROUPCODE + "--" + LV_NEW + "--" +LV_SUBGROUP+"--");
          
      if (LV_UNIT != null&& LV_ASONDT !=null && LV_DAYS != null && LV_GROUPCODE != null && LV_NEW != null && LV_SUBGROUP != null  ) {
          System.out.println("Inside condition!");
      try {

          
          vo.setNamedWhereClauseParam("P49_ASONDT", LV_ASONDT);
          vo.setNamedWhereClauseParam("P49_UNIT_CD", LV_UNIT);
          vo.setNamedWhereClauseParam("P49_DAYS", LV_DAYS);
          vo.setNamedWhereClauseParam("P49_GROUP_CODE", LV_GROUPCODE);
          vo.setNamedWhereClauseParam("P49_NEW", LV_NEW);
          vo.setNamedWhereClauseParam("P49_SUB_GROUP", LV_SUBGROUP);
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


  

    /**
     * Container's getter for DepartmentWiseIssueSummaryVO1.
     * @return DepartmentWiseIssueSummaryVO1
     */
    public ViewObjectImpl getDepartmentWiseIssueSummaryVO1() {
        return (ViewObjectImpl) findViewObject("DepartmentWiseIssueSummaryVO1");
    }
    
    public void callDepartmentWiseIssueSummary(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getDepartmentWiseIssueSummaryVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("F_DT", FRDATE);
      
          vo.setNamedWhereClauseParam("T_DT", TODATE);
          vo.setNamedWhereClauseParam("p93_unit", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for PurchaseIndentRegisterVO1.
     * @return PurchaseIndentRegisterVO1
     */
    public ViewObjectImpl getPurchaseIndentRegisterVO1() {
        return (ViewObjectImpl) findViewObject("PurchaseIndentRegisterVO1");
    }
    
    public void callPurchaseIndentRegister(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getPurchaseIndentRegisterVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P94_NEW", FRDATE);
      
          vo.setNamedWhereClauseParam("P94_NEW_1", TODATE);
          vo.setNamedWhereClauseParam("P94_UNIT", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for RMVendorWiseAnalysisVO1.
     * @return RMVendorWiseAnalysisVO1
     */
    public ViewObjectImpl getRMVendorWiseAnalysisVO1() {
        return (ViewObjectImpl) findViewObject("RMVendorWiseAnalysisVO1");
    }
    public void callRMVendorWiseAnalysis(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getRMVendorWiseAnalysisVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P100_FR_DT", FRDATE);
      
          vo.setNamedWhereClauseParam("P100_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P100_UNIT", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for PurchaseOrderRegisterVO1.
     * @return PurchaseOrderRegisterVO1
     */
    public ViewObjectImpl getPurchaseOrderRegisterVO1() {
        return (ViewObjectImpl) findViewObject("PurchaseOrderRegisterVO1");
    }
    
    public void callPurchaseOrderRegister(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getPurchaseOrderRegisterVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P106_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P106_TO_DATE", TODATE);
          vo.setNamedWhereClauseParam("P106_UNIT", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for PartMasterReportVO1.
     * @return PartMasterReportVO1
     */
    public ViewObjectImpl getPartMasterReportVO1() {
        return (ViewObjectImpl) findViewObject("PartMasterReportVO1");
    }

    /**
     * Container's getter for SRVRejectionRegisterVO1.
     * @return SRVRejectionRegisterVO1
     */
    public ViewObjectImpl getSRVRejectionRegisterVO1() {
        return (ViewObjectImpl) findViewObject("SRVRejectionRegisterVO1");
    }
    
    public void callSRVRejectionRegister(String LV_UNIT,Date FRDATE,Date TODATE, String LV_TYPE){
          ViewObjectImpl vo = this.getSRVRejectionRegisterVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--"  + LV_TYPE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_TYPE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P120_FR_DT", FRDATE);     
          vo.setNamedWhereClauseParam("P120_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P120_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P120_TYPE", LV_TYPE);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for ProductMasterVO1.
     * @return ProductMasterVO1
     */
    public ViewObjectImpl getProductMasterVO1() {
        return (ViewObjectImpl) findViewObject("ProductMasterVO1");
    }

    /**
     * Container's getter for VendorMasterVO1.
     * @return VendorMasterVO1
     */
    public ViewObjectImpl getVendorMasterVO1() {
        return (ViewObjectImpl) findViewObject("VendorMasterVO1");
    }

    /**
     * Container's getter for LocationMasterVO1.
     * @return LocationMasterVO1
     */
    public ViewObjectImpl getLocationMasterVO1() {
        return (ViewObjectImpl) findViewObject("LocationMasterVO1");
    }

    /**
     * Container's getter for PlantMasterVO1.
     * @return PlantMasterVO1
     */
    public ViewObjectImpl getPlantMasterVO1() {
        return (ViewObjectImpl) findViewObject("PlantMasterVO1");
    }

    /**
     * Container's getter for GroupMasterVO1.
     * @return GroupMasterVO1
     */
    public ViewObjectImpl getGroupMasterVO1() {
        return (ViewObjectImpl) findViewObject("GroupMasterVO1");
    }

    /**
     * Container's getter for SubGroupMasterVO1.
     * @return SubGroupMasterVO1
     */
    public ViewObjectImpl getSubGroupMasterVO1() {
        return (ViewObjectImpl) findViewObject("SubGroupMasterVO1");
    }

    /**
     * Container's getter for StockAdjustmentVO1.
     * @return StockAdjustmentVO1
     */
    public ViewObjectImpl getStockAdjustmentVO1() {
        return (ViewObjectImpl) findViewObject("StockAdjustmentVO1");
    }
    
    
    public void callStockAdjustment(String LV_UNIT, String LV_PartName){
          ViewObjectImpl vo = this.getStockAdjustmentVO1();
          System.out.println( LV_UNIT + "--" + LV_PartName+"--");
          
      if (LV_UNIT != null && LV_PartName != null ) {
          System.out.println("Inside condition!");
      try {

          
         
        
          vo.setNamedWhereClauseParam("P166_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P166_item", LV_PartName);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for UnitOfMeasurementVO1.
     * @return UnitOfMeasurementVO1
     */
    public ViewObjectImpl getUnitOfMeasurementVO1() {
        return (ViewObjectImpl) findViewObject("UnitOfMeasurementVO1");
    }

    /**
     * Container's getter for BatchwiseitemStockSummaryVO1.
     * @return BatchwiseitemStockSummaryVO1
     */
    public ViewObjectImpl getBatchwiseitemStockSummaryVO1() {
        return (ViewObjectImpl) findViewObject("BatchwiseitemStockSummaryVO1");
    }
    
    
    public void callBatchwiseitemStockSummary(String LV_UNIT){
          ViewObjectImpl vo = this.getBatchwiseitemStockSummaryVO1();
          System.out.println( LV_UNIT + "--" );
          
      if (LV_UNIT != null  ) {
          System.out.println("Inside condition!");
      try {

          
         
        
          vo.setNamedWhereClauseParam("P173_UNIT", LV_UNIT);
          
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for IssueBreakupVO1.
     * @return IssueBreakupVO1
     */
    public ViewObjectImpl getIssueBreakupVO1() {
        return (ViewObjectImpl) findViewObject("IssueBreakupVO1");
    }

    public void callIssueBreakup(String LV_UNIT,String LV_LOC, Integer LV_SID, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getIssueBreakupVO1();
         System.out.println(LV_UNIT + "--" +  FRDATE +"--" + TODATE +"--" + LV_SID + "--" + LV_LOC + "--"/* + LV_CUST + "--"*/ );
        
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null && LV_LOC !=null && LV_SID!=null ) {
            System.out.println("Inside condition!");
            try {
//               
                callStoredProcedure("DPR_STOCK_STM_qty(?,?,?,?,?)", new Object[]
                                    {FRDATE, TODATE, LV_LOC,LV_SID,  LV_UNIT });         
               
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.setNamedWhereClauseParam("P105_FROM_DATE", FRDATE);
                vo.setNamedWhereClauseParam("P105_LOC", LV_LOC);
                vo.setNamedWhereClauseParam("P105_TO_DATE", TODATE);
                vo.setNamedWhereClauseParam("P105_UNIT", LV_UNIT);
                
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
    }
    
        }
     }

    /**
     * Container's getter for PendingIndentforPOVO1.
     * @return PendingIndentforPOVO1
     */
    public ViewObjectImpl getPendingIndentforPOVO1() {
        return (ViewObjectImpl) findViewObject("PendingIndentforPOVO1");
    }
    
    
    public void callPendingIndentforPO(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getPendingIndentforPOVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P86_FT_DT", FRDATE);
      
          vo.setNamedWhereClauseParam("P86_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P86_UNIT", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for PendingSRVForQcVO1.
     * @return PendingSRVForQcVO1
     */
    public ViewObjectImpl getPendingSRVForQcVO1() {
        return (ViewObjectImpl) findViewObject("PendingSRVForQcVO1");
    }
    public void callPendingSRVForQc(String LV_UNIT,Date FRDATE,Date TODATE, String LV_GroupCD, String LV_SubGroupCd,String LV_VendorCd ){
          ViewObjectImpl vo = this.getPendingSRVForQcVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--" + LV_GroupCD + "--" + LV_SubGroupCd + "--" + LV_VendorCd + "--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_GroupCD !=null && LV_SubGroupCd !=null && LV_VendorCd != null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P47_FROM_DATE", FRDATE);
          vo.setNamedWhereClauseParam("P47_TO_DATE", TODATE);
          vo.setNamedWhereClauseParam("P47_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P47_GROUP_CODE", LV_GroupCD);
          vo.setNamedWhereClauseParam("P47_SUB_GROUP", LV_SubGroupCd);
          vo.setNamedWhereClauseParam("P47_VENDOR", LV_VendorCd);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for IndentPendingAndCloseVO1.
     * @return IndentPendingAndCloseVO1
     */
    public ViewObjectImpl getIndentPendingAndCloseVO1() {
        return (ViewObjectImpl) findViewObject("IndentPendingAndCloseVO1");
    }
    
    public void callIndentPendingAndClose(String LV_TYPE,Date FRDATE,Date TODATE, String LV_UNIT){
          ViewObjectImpl vo = this.getIndentPendingAndCloseVO1();
          System.out.println(  LV_UNIT+"--" + FRDATE + "--" + TODATE+"--"   );
          
      if (  FRDATE != null && TODATE != null && LV_UNIT !=null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P211_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P211_TO_DATE", TODATE);
       
          vo.setNamedWhereClauseParam("P211_UNIT_CD", LV_UNIT);
          
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for JobworkRegisterVO1.
     * @return JobworkRegisterVO1
     */
    public ViewObjectImpl getJobworkRegisterVO1() {
        return (ViewObjectImpl) findViewObject("JobworkRegisterVO1");
    }
    
    public void callJobworkRegister(String LV_PO,Date FRDATE,Date TODATE, String LV_UNIT){
          ViewObjectImpl vo = this.getJobworkRegisterVO1();
          System.out.println(  LV_UNIT+"--" + FRDATE + "--" + TODATE+"--" + LV_PO + "--"  );
          
      if (  FRDATE != null && TODATE != null && LV_UNIT !=null && LV_PO != null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P256_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P256_TO_DATE", TODATE);
       
          vo.setNamedWhereClauseParam("P256_UNIT", LV_UNIT);
          
          vo.setNamedWhereClauseParam("P256_PO", LV_PO);
          
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for VendorRejectionVO1.
     * @return VendorRejectionVO1
     */
    public ViewObjectImpl getVendorRejectionVO1() {
        return (ViewObjectImpl) findViewObject("VendorRejectionVO1");
    }
    
    
    public void callVendorRejection(String LV_UNIT, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getVendorRejectionVO1();
   
        System.out.println(LV_UNIT + "--" + FRDATE +"--" + TODATE +"--" );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null ){
            
            
            System.out.println("inside condition");
            
            try {
    //                     
              
                vo.setNamedWhereClauseParam("P24_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P24_FRDT", FRDATE);
                vo.setNamedWhereClauseParam("P24_TODT", TODATE);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for PurchaseIndentVO1.
     * @return PurchaseIndentVO1
     */
    public ViewObjectImpl getPurchaseIndentVO1() {
        return (ViewObjectImpl) findViewObject("PurchaseIndentVO1");
    }
    
    
    public void callPurchaseIndent(String LV_UNIT,String LV_ApprovedBy, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getPurchaseIndentVO1();
        System.out.println(LV_UNIT + "--" + LV_ApprovedBy +"---" + FRDATE +"--" + TODATE +"--"  /*LV_INV_TYPE + "--" + LV_CUST + "--"*/ );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null && LV_ApprovedBy !=null /*&& LV_CUST==null */){
            
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P19_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P19_NEW", FRDATE);
                vo.setNamedWhereClauseParam("P19_NEW_1", TODATE);
                vo.setNamedWhereClauseParam("P19_APPROVE_BY", LV_ApprovedBy);
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for ContractOrderVO1.
     * @return ContractOrderVO1
     */
    public ViewObjectImpl getContractOrderVO1() {
        return (ViewObjectImpl) findViewObject("ContractOrderVO1");
    }
    public void callContractOrder(String LV_UNIT, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getContractOrderVO1();
        System.out.println(LV_UNIT + "--"  + FRDATE +"--" + TODATE +"--"  );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null ){
            
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P18_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P18_NEW", FRDATE);
                vo.setNamedWhereClauseParam("P18_NEW_1", TODATE);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for PurchaseRegisterVO1.
     * @return PurchaseRegisterVO1
     */
    public ViewObjectImpl getPurchaseRegisterVO1() {
        return (ViewObjectImpl) findViewObject("PurchaseRegisterVO1");
    }  
    
    
    
    public void callPurchaseRegister(String LV_UNIT, Integer LV_SID,String LV_VendorCode,String  LV_InterUnit,String LV_NatureOfPurchase, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getPurchaseRegisterVO1();

        System.out.println(LV_UNIT + "--" + LV_SID +"---" + FRDATE +"--" + TODATE +"--" + LV_VendorCode + "--" + LV_InterUnit + "--" + LV_NatureOfPurchase + "--");
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null && LV_SID !=null && LV_VendorCode !=null && LV_InterUnit != null && LV_NatureOfPurchase !=null){
            
            
            System.out.println("inside condition");
            
            try {
//                PROC_PUR_REG_APEX_REPORT(unit,fdt,tdt,SID,lv_cust);
                callStoredProcedure("terms.PROC_PUR_REG_APEX_REPORT(?,?,?,?,?)", new Object[]
                                    { LV_UNIT,FRDATE,TODATE,LV_SID, LV_VendorCode });         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.setNamedWhereClauseParam("P17_INTER_UNIT", LV_InterUnit);
                vo.setNamedWhereClauseParam("P17_NATURE_OF_PURCHASE", LV_NatureOfPurchase);
                    
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
}

    /**
     * Container's getter for PurchaseOrderVO1.
     * @return PurchaseOrderVO1
     */
    public ViewObjectImpl getPurchaseOrderVO1() {
        return (ViewObjectImpl) findViewObject("PurchaseOrderVO1");
    }
    public void callPurchaseOrder(String LV_UNIT, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getPurchaseOrderVO1();
        System.out.println(LV_UNIT + "--"  + FRDATE +"--" + TODATE +"--"  );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null ){
            
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P9_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P9_FROM_DATE", FRDATE);
                vo.setNamedWhereClauseParam("P9_TO_DATE", TODATE);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for PendingPurchaseOrderVO1.
     * @return PendingPurchaseOrderVO1
     */
    public ViewObjectImpl getPendingPurchaseOrderVO1() {
        return (ViewObjectImpl) findViewObject("PendingPurchaseOrderVO1");
    }
    public void callPendingPurchaseOrder(String LV_UNIT, Date FRDATE, Date TODATE, String LV_ITEMGROUP, String LV_APPSTATUS, String LV_VALIDTILL){
        ViewObjectImpl vo = this.getPendingPurchaseOrderVO1();
        System.out.println(LV_UNIT + "--"  + FRDATE +"--" + TODATE +"--" +LV_ITEMGROUP+ "--" +LV_APPSTATUS+"--"+LV_VALIDTILL + "--");
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null && LV_ITEMGROUP != null && LV_APPSTATUS != null && LV_VALIDTILL != null  ){
            
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P8_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P8_FROM_DATE", FRDATE);
                vo.setNamedWhereClauseParam("P8_TO_DATE", TODATE);
                vo.setNamedWhereClauseParam("P8_APP_STATUS", LV_APPSTATUS);
                vo.setNamedWhereClauseParam("P8_VALID_TILL", LV_VALIDTILL);
                vo.setNamedWhereClauseParam("P8_GROUP", LV_ITEMGROUP);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }

    /**
     * Container's getter for ProcessInspectionReportVO1.
     * @return ProcessInspectionReportVO1
     */
    public ViewObjectImpl getProcessInspectionReportVO1() {
        return (ViewObjectImpl) findViewObject("ProcessInspectionReportVO1");
    }
    
    public void callProcessInspectionReport(String LV_UNIT, Date FRDATE, Date TODATE, String LV_PRODCD, String LV_PROCESS){
        ViewObjectImpl vo = this.getProcessInspectionReportVO1();
        System.out.println(LV_UNIT + "--"  + FRDATE +"--" + TODATE +"--" +LV_PRODCD+ "--" +LV_PROCESS+"--");
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null && LV_PRODCD != null && LV_PROCESS != null   ){
            
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P470_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P470_FROM_DATE", FRDATE);
                vo.setNamedWhereClauseParam("P470_TO_DATE", TODATE);
                vo.setNamedWhereClauseParam("P470_PRODUCT", LV_PRODCD);
                vo.setNamedWhereClauseParam("P470_PROCESS", LV_PROCESS);                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }

    /**
     * Container's getter for QualityInProcessVO1.
     * @return QualityInProcessVO1
     */
    public ViewObjectImpl getQualityInProcessVO1() {
        return (ViewObjectImpl) findViewObject("QualityInProcessVO1");
    }
    
    public void callQualityInProcess(String LV_UNIT,String LV_Item_Name){
        ViewObjectImpl vo = this.getQualityInProcessVO1();
        System.out.println(LV_Item_Name + "--" + LV_UNIT + "--" );
        
    if (LV_Item_Name != null && LV_UNIT != null) {
        System.out.println("Inside condition!");
    try {

        
       
        
        vo.setNamedWhereClauseParam("P248_ITEM", LV_Item_Name);
        vo.setNamedWhereClauseParam("P248_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }


    /**
     * Container's getter for ItemsDetailafterQCVO1.
     * @return ItemsDetailafterQCVO1
     */
    public ViewObjectImpl getItemsDetailafterQCVO1() {
        return (ViewObjectImpl) findViewObject("ItemsDetailafterQCVO1");
    }
    
    public void callItemsDetailafterQC(String LV_UNIT, Date FRDATE, Date TODATE, String LV_ITEMCD){
        ViewObjectImpl vo = this.getItemsDetailafterQCVO1();
        System.out.println(LV_UNIT + "--"  + FRDATE +"--" + TODATE +"--" +LV_ITEMCD+ "--" );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null && LV_ITEMCD != null   ){
            
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P221_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P221_FROM_DATE", FRDATE);
                vo.setNamedWhereClauseParam("P221_TO_DATE", TODATE);
                vo.setNamedWhereClauseParam("P221_ITEM", LV_ITEMCD);                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }

    /**
     * Container's getter for PendingBMRForQCVO1.
     * @return PendingBMRForQCVO1
     */
    public ViewObjectImpl getPendingBMRForQCVO1() {
        return (ViewObjectImpl) findViewObject("PendingBMRForQCVO1");
    }
    
    
    public void callPendingBMRforQC(String LV_UNIT,String LV_BatchFilter ){
          ViewObjectImpl vo = this.getPendingBMRForQCVO1();
          System.out.println( LV_UNIT + "--"  + LV_BatchFilter+ "--" );
          
      if (LV_UNIT != null&& LV_BatchFilter !=null  ) {
          System.out.println("Inside condition!");
      try {

          
          
          vo.setNamedWhereClauseParam("P227_UNIT_CD", LV_UNIT);
          vo.setNamedWhereClauseParam("P227_BATCH", LV_BatchFilter);
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for PendingFGforQCVVO1.
     * @return PendingFGforQCVVO1
     */
    public ViewObjectImpl getPendingFGforQCVVO1() {
        return (ViewObjectImpl) findViewObject("PendingFGforQCVVO1");
    }


    /**
     * Container's getter for IncomingInspectionRegisterVVO1.
     * @return IncomingInspectionRegisterVVO1
     */
    public ViewObjectImpl getIncomingInspectionRegisterVVO1() {
        return (ViewObjectImpl) findViewObject("IncomingInspectionRegisterVVO1");
    }
    
    public void callIncomingInspectionRegister(String LV_UNIT, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getIncomingInspectionRegisterVVO1();
        System.out.println(LV_UNIT + "--"  + FRDATE +"--" + TODATE +"--"  );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null    ){
            
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P59_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P59_FRDT", FRDATE);
                vo.setNamedWhereClauseParam("P59_TODT", TODATE);
                               
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }

    /**
     * Container's getter for EmployeeMasterVO1.
     * @return EmployeeMasterVO1
     */
    public ViewObjectImpl getEmployeeMasterVO1() {
        return (ViewObjectImpl) findViewObject("EmployeeMasterVO1");
    }

    /**
     * Container's getter for DebtorOutstandingVO1.
     * @return DebtorOutstandingVO1
     */
    public ViewObjectImpl getDebtorOutstandingVO1() {
        return (ViewObjectImpl) findViewObject("DebtorOutstandingVO1");
    }
    
    public void callDebtorOutstanding(String LV_UNIT, Integer LV_SID, Date FRDATE , String LV_CUSTOMER, Integer
                                      LV_p1, Integer LV_p2, Integer LV_p3, Integer LV_p4, Integer LV_p5, Integer LV_p6){
        ViewObjectImpl vo = this.getDebtorOutstandingVO1();
//    String LV_p1 = "";
//    String LV_p2 = "";
//    String LV_p3 = "";
//    String LV_p4 = "";
//    String LV_p5 = "";
//    String LV_p6 = "";



        System.out.println(LV_UNIT + "--" + FRDATE +"--" + LV_SID +"--" + LV_CUSTOMER + "--" + LV_p1 + "--" + LV_p2 + "--"
                           +LV_p3 + "--"+ LV_p4 + "--"+LV_p5 + "--" + LV_p6+"--");
        
        if (LV_UNIT != null && FRDATE !=null  && LV_SID!=null && LV_CUSTOMER != null && LV_p1 != null && LV_p2 != null
                && LV_p3 != null & LV_p4 != null && LV_p5 != null && LV_p6 != null)
{
            
            
            System.out.println("inside condition");
            
            try {
                callStoredProcedure("terms.Debt_Againg(?,?,?,?,?,?,?,?,?,?)", new Object[]
                                    {FRDATE,LV_CUSTOMER,LV_UNIT, LV_SID,  LV_p1 ,LV_p2 ,LV_p3 ,LV_p4 ,LV_p5, LV_p6});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }

    /**
     * Container's getter for CreditorOutstandingVO1.
     * @return CreditorOutstandingVO1
     */
    public ViewObjectImpl getCreditorOutstandingVO1() {
        return (ViewObjectImpl) findViewObject("CreditorOutstandingVO1");
    }
    
    public void callCreditorOutstanding(String LV_UNIT, Integer LV_SID, Date FRDATE , String LV_Custcode, Integer
                                      LV_p1, Integer LV_p2, Integer LV_p3, Integer LV_p4, Integer LV_p5, Integer LV_p6){
        
        ViewObjectImpl vo = this.getCreditorOutstandingVO1();


        System.out.println(LV_UNIT + "--" + FRDATE +"--" + LV_SID +"--" + LV_Custcode + "--" + LV_p1 + "--" + LV_p2 + "--"
                           + LV_p3 + "--" + LV_p4 + "--" + LV_p5 + "--" + LV_p6 + "--");
        
        if ( LV_UNIT != null && FRDATE !=null  && LV_SID!=null && LV_Custcode != null && LV_p1 != null && LV_p2 != null
                && LV_p3 != null & LV_p4 != null && LV_p5 != null && LV_p6 != null)
    {
            
            
            System.out.println("inside condition");
            
            try {
//                Cred_Ageing_apex_rep(fdt,VENcd,unit,sid,LV_P1,LV_P2,LV_P3,LV_P4,LV_P5,LV_P6);
                callStoredProcedure("terms.Cred_Ageing_apex_rep(?,?,?,?,?,?,?,?,?,?)", new Object[]
                                    {FRDATE,LV_Custcode,LV_UNIT, LV_SID,  LV_p1 ,LV_p2 ,LV_p3 ,LV_p4 ,LV_p5, LV_p6});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for CreditorOutstandingSummaryVO1.
     * @return CreditorOutstandingSummaryVO1
     */
    public ViewObjectImpl getCreditorOutstandingSummaryVO1() {
        return (ViewObjectImpl) findViewObject("CreditorOutstandingSummaryVO1");
    }
    
    public void callCreditorOutstandingSummary(String LV_UNIT, Integer LV_SID, Date FRDATE , String LV_Custcode, Integer
                                      LV_p1, Integer LV_p2, Integer LV_p3, Integer LV_p4, Integer LV_p5, Integer LV_p6){
        
        ViewObjectImpl vo = this.getCreditorOutstandingSummaryVO1();


        System.out.println(LV_UNIT + "--" + FRDATE +"--" + LV_SID +"--" + LV_Custcode + "--" + LV_p1 + "--" + LV_p2 + "--"
                           + LV_p3 + "--" + LV_p4 + "--" + LV_p5 + "--" + LV_p6 + "--");
        
        if ( LV_UNIT != null && FRDATE !=null  && LV_SID!=null && LV_Custcode != null && LV_p1 != null && LV_p2 != null
                && LV_p3 != null & LV_p4 != null && LV_p5 != null && LV_p6 != null)
    {
            
            
            System.out.println("inside condition");
            
            try {
    //                cred_Againg(fdt,VENcd,unit,sid,LV_P1,LV_P2,LV_P3,LV_P4,LV_P5,LV_P6);
                callStoredProcedure("terms.cred_Againg(?,?,?,?,?,?,?,?,?,?)", new Object[]
                                    {FRDATE,LV_Custcode,LV_UNIT, LV_SID,  LV_p1 ,LV_p2 ,LV_p3 ,LV_p4 ,LV_p5, LV_p6});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for IncominginspectionCheckVO1.
     * @return IncominginspectionCheckVO1
     */
    public ViewObjectImpl getIncominginspectionCheckVO1() {
        return (ViewObjectImpl) findViewObject("IncominginspectionCheckVO1");
    }

    /**
     * Container's getter for DebtorOutstandingSummaryVO1.
     * @return DebtorOutstandingSummaryVO1
     */
    public ViewObjectImpl getDebtorOutstandingSummaryVO1() {
        return (ViewObjectImpl) findViewObject("DebtorOutstandingSummaryVO1");
    }
    public void callDebtorOutstandingSummary(String LV_UNIT, Integer LV_SID, Date FRDATE , String LV_CUSTOMER, Integer
                                      LV_p1, Integer LV_p2, Integer LV_p3, Integer LV_p4, Integer LV_p5, Integer LV_p6){
        ViewObjectImpl vo = this.getDebtorOutstandingSummaryVO1();
    //    String LV_p1 = "";
    //    String LV_p2 = "";
    //    String LV_p3 = "";
    //    String LV_p4 = "";
    //    String LV_p5 = "";
    //    String LV_p6 = "";



        System.out.println(LV_UNIT + "--" + FRDATE +"--" + LV_SID +"--" + LV_CUSTOMER + "--" + LV_p1 + "--" + LV_p2 + "--"
                           +LV_p3 + "--"+ LV_p4 + "--"+LV_p5 + "--" + LV_p6+"--");
        
        if (LV_UNIT != null && FRDATE !=null  && LV_SID!=null && LV_CUSTOMER != null && LV_p1 != null && LV_p2 != null
                && LV_p3 != null & LV_p4 != null && LV_p5 != null && LV_p6 != null)
    {
            
            
            System.out.println("inside condition");
            
            try {
                callStoredProcedure("terms.Debt_Againg(?,?,?,?,?,?,?,?,?,?)", new Object[]
                                    {FRDATE,LV_CUSTOMER,LV_UNIT, LV_SID,  LV_p1 ,LV_p2 ,LV_p3 ,LV_p4 ,LV_p5, LV_p6});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for FGStockPositionVO1.
     * @return FGStockPositionVO1
     */
    public ViewObjectImpl getFGStockPositionVO1() {
        return (ViewObjectImpl) findViewObject("FGStockPositionVO1");
    }


    /**
     * Container's getter for SubLedgerVO1.
     * @return SubLedgerVO1
     */
    public ViewObjectImpl getSubLedgerVO1() {
        return (ViewObjectImpl) findViewObject("SubLedgerVO1");
    }
    
    public void callSubLedger(String LV_UNIT, Integer LV_SID, String LV_NameFilter, Date FRDATE, Date TODATE  ){
        ViewObjectImpl vo = this.getSubLedgerVO1();

        System.out.println(LV_UNIT + "--" + FRDATE +"--"  + TODATE +"--" + LV_SID +"--" + LV_NameFilter + "--" );
        
        if (LV_UNIT != null && FRDATE != null && TODATE != null && LV_SID != null && LV_NameFilter != null )
    {
            
            
            System.out.println("inside condition");
            
            try {
                if(LV_UNIT == "%")
                {
//                SUB_LED_PROC_APXC(null,unit,sid,fdt,tdt,sbcd,sbcd);
                callStoredProcedure("terms.SUB_LED_PROC_APXC(?,?,?,?,?,?,?)", new Object[]
                                    {null, LV_UNIT, LV_SID,FRDATE, TODATE, LV_NameFilter, LV_NameFilter});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.setNamedWhereClauseParam("P55_SUB_CODE", LV_NameFilter);
                vo.setNamedWhereClauseParam("P55_UNIT", LV_UNIT);
                
                
                     
                vo.executeQuery();
                }
                else 
                {
//                    SUB_LED_PROC_APX(null,unit,sid,fdt,tdt,sbcd,sbcd);
                    callStoredProcedure("terms.SUB_LED_PROC_APX(?,?,?,?,?,?,?)", new Object[]
                                        {null, LV_UNIT, LV_SID,FRDATE, TODATE, LV_NameFilter, LV_NameFilter});         
                    
                    vo.setNamedWhereClauseParam("bindSession", LV_SID);
                    vo.setNamedWhereClauseParam("P55_SUB_CODE", LV_NameFilter);
                    vo.setNamedWhereClauseParam("P55_UNIT", LV_UNIT);
                    
                    
                         
                    vo.executeQuery();
                }

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for JVSalePurchaseContraBookVO1.
     * @return JVSalePurchaseContraBookVO1
     */
    public ViewObjectImpl getJVSalePurchaseContraBookVO1() {
        return (ViewObjectImpl) findViewObject("JVSalePurchaseContraBookVO1");
    }
    public void callJVSalePurchaseContraBook(String LV_UNIT, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getJVSalePurchaseContraBookVO1();
        System.out.println(LV_UNIT + "--"  + FRDATE +"--" + TODATE +"--"  );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null    ){
            
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P25_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P25_FDT", FRDATE);
                vo.setNamedWhereClauseParam("P25_TDT", TODATE);
                               
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }

    /**
     * Container's getter for VoucherDetailVO1.
     * @return VoucherDetailVO1
     */
    public ViewObjectImpl getVoucherDetailVO1() {
        return (ViewObjectImpl) findViewObject("VoucherDetailVO1");
    }
    
    public void callVoucherDetail (String LV_UNIT, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getVoucherDetailVO1();
        System.out.println(LV_UNIT + "--"  + FRDATE +"--" + TODATE +"--"  );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null    ){
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P25_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P25_FDT", FRDATE);
                vo.setNamedWhereClauseParam("P25_TDT", TODATE);
                               
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }

    /**
     * Container's getter for PendingToD28VO1.
     * @return PendingToD28VO1
     */
    public ViewObjectImpl getPendingToD28VO1() {
        return (ViewObjectImpl) findViewObject("PendingToD28VO1");
    }
    
    public void callPendingToD28(String LV_UNIT,String LV_ChallanNo, String LV_ItemCode){
        ViewObjectImpl vo = this.getPendingToD28VO1();
    System.out.println(LV_UNIT + "--" + LV_ChallanNo + "--" + LV_ItemCode + "--");
    
    if ( LV_UNIT != null && LV_ChallanNo != null && LV_ItemCode != null) {
        System.out.println("Inside condition!");
    try {

        
        vo.setNamedWhereClauseParam("P469_UNIT_CD", LV_UNIT);
        vo.setNamedWhereClauseParam("P469_CHALLAN_NO", LV_ChallanNo);
        vo.setNamedWhereClauseParam("P469_ITM_CD", LV_ItemCode);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    
                                        
                                    
        
        
    }
    }
    }


    /**
     * Container's getter for PendingDispatchAdviceForInvoiceVO1.
     * @return PendingDispatchAdviceForInvoiceVO1
     */
    public ViewObjectImpl getPendingDispatchAdviceForInvoiceVO1() {
        return (ViewObjectImpl) findViewObject("PendingDispatchAdviceForInvoiceVO1");
    }
    
    public void callPendingDispatchAdviceForInvoice(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getPendingDispatchAdviceForInvoiceVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P245_FROM_DT", FRDATE);
      
          vo.setNamedWhereClauseParam("P245_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P245_UNIT_CODE", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for STOfromSalesWarehouseVO1.
     * @return STOfromSalesWarehouseVO1
     */
    public ViewObjectImpl getSTOfromSalesWarehouseVO1() {
        return (ViewObjectImpl) findViewObject("STOfromSalesWarehouseVO1");
    }
    
    public void callSTOfromSalesWarehouse(String LV_WAREHOUSENAME){
          ViewObjectImpl vo = this.getSTOfromSalesWarehouseVO1();
          System.out.println( LV_WAREHOUSENAME + "--" );
          
      if (LV_WAREHOUSENAME != null ) {
          System.out.println("Inside condition!");
      try {

          
         
//          vo.setNamedWhereClauseParam("P245_FROM_DT", FRDATE);
//      
//          vo.setNamedWhereClauseParam("P245_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P268_NEW",LV_WAREHOUSENAME);
                                                                       
                                                                                                                                                                                                                                                      
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for DailyInvoiceSaleVO1.
     * @return DailyInvoiceSaleVO1
     */
    public ViewObjectImpl getDailyInvoiceSaleVO1() {
        return (ViewObjectImpl) findViewObject("DailyInvoiceSaleVO1");
    }
    public void callDailyInvoiceSale (String LV_UNIT, Date FRDATE, Date TODATE , String LV_INVOICENO){
        ViewObjectImpl vo = this.getDailyInvoiceSaleVO1();
        System.out.println(LV_UNIT + "--"  + FRDATE +"--" + TODATE +"--" + LV_INVOICENO );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null && LV_INVOICENO !=null   ){
            
            System.out.println("inside condition");
            
            try {

                vo.setNamedWhereClauseParam("P197_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P197_FROM", FRDATE);
                vo.setNamedWhereClauseParam("P197_TO", TODATE);
                vo.setNamedWhereClauseParam("P197_INVOICE_NO", LV_INVOICENO);
                               
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for PendingFGforReceivingInStoreVO1.
     * @return PendingFGforReceivingInStoreVO1
     */
    public ViewObjectImpl getPendingFGforReceivingInStoreVO1() {
        return (ViewObjectImpl) findViewObject("PendingFGforReceivingInStoreVO1");
    }
    
    public void callPendingFGforReceivingInStore(String LV_UNIT){
        ViewObjectImpl vo = this.getPendingFGforReceivingInStoreVO1();
    System.out.println(LV_UNIT + "--");
    
    if ( LV_UNIT != null) {
        System.out.println("Inside condition!");
    try {

        
        vo.setNamedWhereClauseParam("P224_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    
                                        
                                    
        
        
    }
    }
    }


    /**
     * Container's getter for InvoiceWiseSaleVO1.
     * @return InvoiceWiseSaleVO1
     */
    public ViewObjectImpl getInvoiceWiseSaleVO1() {
        return (ViewObjectImpl) findViewObject("InvoiceWiseSaleVO1");
    }
    
    
    public void callInvoiceWiseSale(String LV_UNIT,String LV_ItemName, Date FRDATE, Date TODATE ){
        ViewObjectImpl vo = this.getInvoiceWiseSaleVO1();
    System.out.println(LV_UNIT + "--" +LV_ItemName + "--" + FRDATE + "--" + TODATE + "--");
    
    if ( LV_UNIT != null && LV_ItemName != null && FRDATE != null && TODATE != null) {
        System.out.println("Inside condition!");
    try {

        
        vo.setNamedWhereClauseParam("P177_UNIT", LV_UNIT);
        vo.setNamedWhereClauseParam("P177_PROD_NAME", LV_ItemName);
        vo.setNamedWhereClauseParam("P177_FROM_DATE", FRDATE);
        vo.setNamedWhereClauseParam("P177_TO_DATE", TODATE);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    
                                        
                                    
        
        
    }
    }
    }


    /**
     * Container's getter for InterUnitTransitReportVO1.
     * @return InterUnitTransitReportVO1
     */
    public ViewObjectImpl getInterUnitTransitReportVO1() {
        return (ViewObjectImpl) findViewObject("InterUnitTransitReportVO1");
    }
    
    public void callInterUnitTransitReport(String LV_INVUNIT, String LV_BILLUNIT ){
        ViewObjectImpl vo = this.getInterUnitTransitReportVO1();
    System.out.println(LV_INVUNIT + "--" + LV_BILLUNIT + "--");
    
    if ( LV_INVUNIT != null && LV_BILLUNIT != null) {
        System.out.println("Inside condition!");
    try {

        
        vo.setNamedWhereClauseParam("P181_BILL_UNIT", LV_BILLUNIT);
        vo.setNamedWhereClauseParam("P181_INV_UNIT", LV_INVUNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    
                                        
                                    
        
        
    }
    }
    }

    /**
     * Container's getter for EInvoiceVO1.
     * @return EInvoiceVO1
     */
    public ViewObjectImpl getEInvoiceVO1() {
        return (ViewObjectImpl) findViewObject("EInvoiceVO1");
    }
    
    public void callEInvoice(String LV_INVOICE,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getEInvoiceVO1();
          System.out.println( LV_INVOICE + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_INVOICE != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P171_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P171_TO_DATE", TODATE);
          vo.setNamedWhereClauseParam("P171_INVOICE_NO", LV_INVOICE);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for IssueVsInvoiceVO1.
     * @return IssueVsInvoiceVO1
     */
    public ViewObjectImpl getIssueVsInvoiceVO1() {
        return (ViewObjectImpl) findViewObject("IssueVsInvoiceVO1");
    }

    /**
     * Container's getter for CustomerMasterVO1.
     * @return CustomerMasterVO1
     */
    public ViewObjectImpl getCustomerMasterVO1() {
        return (ViewObjectImpl) findViewObject("CustomerMasterVO1");
    }

    /**
     * Container's getter for ItemWiseSaleVO1.
     * @return ItemWiseSaleVO1
     */
    public ViewObjectImpl getItemWiseSaleVO1() {
        return (ViewObjectImpl) findViewObject("ItemWiseSaleVO1");
    }
    public void callItemWiseSale(String LV_UNIT,Date FRDATE,Date TODATE, String LV_INVOICETYPE , String LV_STOCKTYPE, 
                                 String LV_PRODUCTCODE){
          ViewObjectImpl vo = this.getItemWiseSaleVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--" + LV_INVOICETYPE + "--" + LV_STOCKTYPE + "--"
                              + LV_PRODUCTCODE + "--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_INVOICETYPE != null &&  LV_STOCKTYPE != null
                 &&  LV_PRODUCTCODE != null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P167_FROM_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P167_TO_DATE", TODATE);
          vo.setNamedWhereClauseParam("P167_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P167_INVOICE_TYPE", LV_INVOICETYPE);
          vo.setNamedWhereClauseParam("P167_STOCK_TYPE", LV_STOCKTYPE);
          vo.setNamedWhereClauseParam("P167_PRODUCT", LV_PRODUCTCODE);



         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for IssueStatusBPRVO1.
     * @return IssueStatusBPRVO1
     */
    public ViewObjectImpl getIssueStatusBPRVO1() {
        return (ViewObjectImpl) findViewObject("IssueStatusBPRVO1");
    }
    public void callIssueStatusBPR(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getIssueStatusBPRVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P194_FROM", FRDATE);
      
          vo.setNamedWhereClauseParam("P194_TO", TODATE);
          vo.setNamedWhereClauseParam("P194_NEW", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for IssueStatusBMRVO1.
     * @return IssueStatusBMRVO1
     */
    public ViewObjectImpl getIssueStatusBMRVO1() {
        return (ViewObjectImpl) findViewObject("IssueStatusBMRVO1");
    }
    
    
    public void callIssueStatusBMR(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getIssueStatusBMRVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P200_FROM", FRDATE);
      
          vo.setNamedWhereClauseParam("P200_TO", TODATE);
          vo.setNamedWhereClauseParam("P200_NEW", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for EWayBillRegisterVO1.
     * @return EWayBillRegisterVO1
     */
    public ViewObjectImpl getEWayBillRegisterVO1() {
        return (ViewObjectImpl) findViewObject("EWayBillRegisterVO1");
    }
    
    public void callEWayBillRegister(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getEWayBillRegisterVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P110_FR_DT", FRDATE);
      
          vo.setNamedWhereClauseParam("P110_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P110_UNIT", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for StatementofDispatchVO1.
     * @return StatementofDispatchVO1
     */
    public ViewObjectImpl getStatementofDispatchVO1() {
        return (ViewObjectImpl) findViewObject("StatementofDispatchVO1");
    }
    
    public void callStatementofDispatch(String LV_UNIT,  Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getStatementofDispatchVO1();
   
        System.out.println(LV_UNIT + "--" + FRDATE +"--" + TODATE +"--" );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null ){
            
            
            System.out.println("inside condition");
            
            try {

              
                
                vo.setNamedWhereClauseParam("P95_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P95_FROM_DATE", FRDATE);
                vo.setNamedWhereClauseParam("P95_TO_DATE", TODATE);
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for SaleSummaryVO1.
     * @return SaleSummaryVO1
     */
    public ViewObjectImpl getSaleSummaryVO1() {
        return (ViewObjectImpl) findViewObject("SaleSummaryVO1");
    }
    public void callSaleSummary(String LV_UNIT, Integer LV_SID, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getSaleSummaryVO1();
    String LV_INV_TYPE = "";
    String LV_CUST = "";
        System.out.println(LV_UNIT + "--" +  FRDATE +"--" + TODATE +"--"  /*LV_INV_TYPE + "--" + LV_CUST + "--"*/ );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null /*&& LV_INV_TYPE ==null && LV_CUST==null */){
            
            
            System.out.println("inside condition");
            
            try {

                callStoredProcedure("terms.Sales_Rep_Proc_HD(?,?,?,?,?,?)", new Object[]
                                    { FRDATE,TODATE,LV_UNIT,LV_INV_TYPE, LV_CUST ,LV_SID});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
//                vo.setNamedWhereClauseParam("P12_INC_CAN", LV_INC_CAN);
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }

    /**
     * Container's getter for ProductionStatisticsVO1.
     * @return ProductionStatisticsVO1
     */
    public ViewObjectImpl getProductionStatisticsVO1() {
        return (ViewObjectImpl) findViewObject("ProductionStatisticsVO1");
    }
    public void callProductionStatistics(String LV_UNIT,  Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getProductionStatisticsVO1();
    
        System.out.println(LV_UNIT + "--" + FRDATE +"--" + TODATE +"--" );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null ){
            
            
            System.out.println("inside condition");
            
            try {

              
                
                vo.setNamedWhereClauseParam("P139_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("P139_FR_DT", FRDATE);
                vo.setNamedWhereClauseParam("P139_TO_DT", TODATE);
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for SaleOrderVO1.
     * @return SaleOrderVO1
     */
    public ViewObjectImpl getSaleOrderVO1() {
        return (ViewObjectImpl) findViewObject("SaleOrderVO1");
    }
    
    
    public void callSaleOrder(String LV_UNIT,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getSaleOrderVO1();
          System.out.println( LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P26_FDT", FRDATE);
      
          vo.setNamedWhereClauseParam("P26_SDT", TODATE);
          vo.setNamedWhereClauseParam("P26_UNIT", LV_UNIT);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for TRFRegisterVO1.
     * @return TRFRegisterVO1
     */
    public ViewObjectImpl getTRFRegisterVO1() {
        return (ViewObjectImpl) findViewObject("TRFRegisterVO1");
    }
    
    public void callTRFRegister(String LV_UNIT, String LV_ProductFilter,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getTRFRegisterVO1();
          System.out.println( LV_UNIT + "--" + LV_ProductFilter + "--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null && LV_ProductFilter != null && FRDATE != null && TODATE != null) {
          System.out.println("Inside condition!");
      try {

          
          
          vo.setNamedWhereClauseParam("P202_FR_DT", FRDATE);
          vo.setNamedWhereClauseParam("P202_TO_DT", TODATE);
          vo.setNamedWhereClauseParam("P202_PRODUCT", LV_ProductFilter);
          vo.setNamedWhereClauseParam("P202_UNIT", LV_UNIT);
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for BatchwiseBMRConsumptionVO1.
     * @return BatchwiseBMRConsumptionVO1
     */
    public ViewObjectImpl getBatchwiseBMRConsumptionVO1() {
        return (ViewObjectImpl) findViewObject("BatchwiseBMRConsumptionVO1");
    }
    public void callBatchwiseBMRConsumption(String LV_UNIT,Date FRDATE,Date TODATE, String LV_PARTNAME , String LV_BATCHNO
                                 ){
          ViewObjectImpl vo = this.getBatchwiseBMRConsumptionVO1();
          System.out.println( LV_UNIT + "--" + FRDATE + "--" + TODATE+"--" + LV_PARTNAME + "--" + LV_BATCHNO + "--"
                             );
          
      if (LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_PARTNAME != null &&  LV_BATCHNO != null
                ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P274_F_DATE", FRDATE);
      
          vo.setNamedWhereClauseParam("P274_T_DATE", TODATE);
          vo.setNamedWhereClauseParam("P274_UNIT_CODE", LV_UNIT);
          vo.setNamedWhereClauseParam("P274_PART_CODE", LV_PARTNAME);
          vo.setNamedWhereClauseParam("P274_BATCH", LV_BATCHNO);
//          vo.setNamedWhereClauseParam("P167_PRODUCT", LV_PRODUCTCODE); itemwisesale



         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for FGYieldProductionVO1.
     * @return FGYieldProductionVO1
     */
    public ViewObjectImpl getFGYieldProductionVO1() {
        return (ViewObjectImpl) findViewObject("FGYieldProductionVO1");
    }
    public void callFGYieldProduction(String LV_UNIT, String LV_PRODUCTCD){
        ViewObjectImpl vo = this.getFGYieldProductionVO1();
    System.out.println(LV_UNIT + "--" + LV_PRODUCTCD + "--");
    
    if ( LV_UNIT != null && LV_PRODUCTCD != null) {
        System.out.println("Inside condition!");
    try {

        
        vo.setNamedWhereClauseParam("P263_UNIT", LV_UNIT);
        vo.setNamedWhereClauseParam("P263_PROD", LV_PRODUCTCD);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    
                                        
                                    
        
        
    }
    }
    }


    /**
     * Container's getter for BatchWiseBPRConsumptionVO1.
     * @return BatchWiseBPRConsumptionVO1
     */
    public ViewObjectImpl getBatchWiseBPRConsumptionVO1() {
        return (ViewObjectImpl) findViewObject("BatchWiseBPRConsumptionVO1");
    }
    
    
    public void callBatchWiseBPRConsumption(String LV_UNIT, String LV_ProductName , String LV_BatchNo
                                 ){
          ViewObjectImpl vo = this.getBatchWiseBPRConsumptionVO1();
          System.out.println( LV_UNIT + "--" + LV_ProductName + "--" + LV_BatchNo + "--"
                             );
          
      if (LV_UNIT != null  && LV_ProductName != null &&  LV_BatchNo != null
                ) {
          System.out.println("Inside condition!");
      try {

    
          vo.setNamedWhereClauseParam("P273_UNIT_CODE", LV_UNIT);
          vo.setNamedWhereClauseParam("P273_PRODUCT", LV_ProductName);
          vo.setNamedWhereClauseParam("P273_BATCH_NO", LV_BatchNo);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for BOMVSActualComsumptionVO1.
     * @return BOMVSActualComsumptionVO1
     */
    public ViewObjectImpl getBOMVSActualComsumptionVO1() {
        return (ViewObjectImpl) findViewObject("BOMVSActualComsumptionVO1");
    }
    
    public void callBOMVSActualComsumption(String LV_UNIT){
        ViewObjectImpl vo = this.getBOMVSActualComsumptionVO1();
    System.out.println(LV_UNIT + "--" );
    
    if ( LV_UNIT != null ) {
        System.out.println("Inside condition!");
    try {

        
        vo.setNamedWhereClauseParam("P236_NEW", LV_UNIT);
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    
                                        
                                    
        
        
    }
    }
    }


    /**
     * Container's getter for pendingJobcardForApprovalVO1.
     * @return pendingJobcardForApprovalVO1
     */
    public ViewObjectImpl getpendingJobcardForApprovalVO1() {
        return (ViewObjectImpl) findViewObject("pendingJobcardForApprovalVO1");
    }
    
    public void callPendingJobcardforApproval(String LV_UNIT, String LV_JCSTATUS ){
          ViewObjectImpl vo = this.getpendingJobcardForApprovalVO1();
          System.out.println( LV_UNIT + "--" + LV_JCSTATUS + "--" );
          
      if (LV_UNIT != null  && LV_JCSTATUS != null 
                ) {
          System.out.println("Inside condition!");
      try {

    
          vo.setNamedWhereClauseParam("P241_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P241_STATUS", LV_JCSTATUS);
          
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for BMRandBPRBatchStatuVO1.
     * @return BMRandBPRBatchStatuVO1
     */
    public ViewObjectImpl getBMRandBPRBatchStatuVO1() {
        return (ViewObjectImpl) findViewObject("BMRandBPRBatchStatuVO1");
    }
    public void callBMRandBPRBatchStatus(String LV_UNIT ){
          ViewObjectImpl vo = this.getBMRandBPRBatchStatuVO1();
          System.out.println( LV_UNIT + "--"  );
          
      if (LV_UNIT != null 
                ) {
          System.out.println("Inside condition!");
      try {

    
          vo.setNamedWhereClauseParam("P235_TKS", LV_UNIT);
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }

    /**
     * Container's getter for JobCardDetailStatusVO1.
     * @return JobCardDetailStatusVO1
     */
    public ViewObjectImpl getJobCardDetailStatusVO1() {
        return (ViewObjectImpl) findViewObject("JobCardDetailStatusVO1");
    }
    
    public void callJobCardDetailStatus(String LV_UnitCode){
        ViewObjectImpl vo = this.getJobCardDetailStatusVO1();

        System.out.println(LV_UnitCode );
        
        if (LV_UnitCode != null ){
            
            
            System.out.println("inside condition");
            
            try {
                
                vo.setNamedWhereClauseParam("P223_UNIT", LV_UnitCode);
                
                
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for LotStockVO1.
     * @return LotStockVO1
     */
    public ViewObjectImpl getLotStockVO1() {
        return (ViewObjectImpl) findViewObject("LotStockVO1");
    }
    
    public void callLotStock(String LV_UNIT,String LV_ItemType ){
          ViewObjectImpl vo = this.getLotStockVO1();
          System.out.println( LV_UNIT + "--"  + LV_ItemType+ "--" );
          
      if (LV_UNIT != null&& LV_ItemType !=null ) {
          System.out.println("Inside condition!");
      try {

          
          
          vo.setNamedWhereClauseParam("P223_UNIT", LV_UNIT);
          
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for ProductShortageandBatchReportVO1.
     * @return ProductShortageandBatchReportVO1
     */
    public ViewObjectImpl getProductShortageandBatchReportVO1() {
        return (ViewObjectImpl) findViewObject("ProductShortageandBatchReportVO1");
    }
    public void callProductShortageandBatch(String LV_UNIT,String LV_PRODUCT , String LV_REQUESTQTY ,  String LV_SID){
        ViewObjectImpl vo = this.getProductShortageandBatchReportVO1();
     String LV_USERS  = "";
    
        System.out.println(LV_UNIT + "--" +  LV_PRODUCT +"--" + LV_REQUESTQTY +"--"  /*LV_INV_TYPE + "--" + LV_CUST + "--"*/ );
        
        if (LV_UNIT != null && LV_PRODUCT !=null && LV_REQUESTQTY !=null /*&& LV_INV_TYPE ==null && LV_CUST==null */){
            
            
            System.out.println("inside condition");
            
            try {

                callStoredProcedure("terms.REP_BATCH_SHORTAGE(?,?,?,?,?)", new Object[]
                                    {LV_UNIT, LV_PRODUCT, LV_REQUESTQTY, LV_USERS, LV_SID});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
    //                vo.setNamedWhereClauseParam("P12_INC_CAN", LV_INC_CAN);
                vo.setNamedWhereClauseParam("P270_PRODUCT", LV_PRODUCT);

                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }

    /**
     * Container's getter for InventoryVsStockFGVO1.
     * @return InventoryVsStockFGVO1
     */
    public ViewObjectImpl getInventoryVsStockFGVO1() {
        return (ViewObjectImpl) findViewObject("InventoryVsStockFGVO1");
    }

    /**
     * Container's getter for ItemWiseTotalInventoryVO1.
     * @return ItemWiseTotalInventoryVO1
     */
    public ViewObjectImpl getItemWiseTotalInventoryVO1() {
        return (ViewObjectImpl) findViewObject("ItemWiseTotalInventoryVO1");
    }
    public void callItemWiseTotalInventory(String LV_UNIT, String LV_PRODUCTCODE ){
          ViewObjectImpl vo = this.getItemWiseTotalInventoryVO1();
          System.out.println( LV_UNIT + "--" + LV_PRODUCTCODE + "--" );
          
      if (LV_UNIT != null  && LV_PRODUCTCODE != null 
                ) {
          System.out.println("Inside condition!");
      try {

    
          vo.setNamedWhereClauseParam("P468_UNIT_CD", LV_UNIT);
          vo.setNamedWhereClauseParam("P468_ITEM_CD", LV_PRODUCTCODE);
          
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for RequisitionSlipRegisterVO1.
     * @return RequisitionSlipRegisterVO1
     */
    public ViewObjectImpl getRequisitionSlipRegisterVO1() {
        return (ViewObjectImpl) findViewObject("RequisitionSlipRegisterVO1");
    }
    
    public void callRequisitionSlipRegister(String LV_UNIT, String ReqTypeFilter){
        ViewObjectImpl vo = this.getRequisitionSlipRegisterVO1();
        System.out.println(  LV_UNIT + "--" + ReqTypeFilter + "--"  );
        
    if ( LV_UNIT != null  && ReqTypeFilter != null ) {
        System.out.println("Inside condition!");
    try {

        
       
        
        vo.setNamedWhereClauseParam("P255_REQUISITION", ReqTypeFilter);
        vo.setNamedWhereClauseParam("P255_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }


    /**
     * Container's getter for JobworkReciptAgainstChallanOutwardVO1.
     * @return JobworkReciptAgainstChallanOutwardVO1
     */
    public ViewObjectImpl getJobworkReciptAgainstChallanOutwardVO1() {
        return (ViewObjectImpl) findViewObject("JobworkReciptAgainstChallanOutwardVO1");
    }
    
    public void callJobworkReciptAgainstChallanOutward(String LV_UNIT,Date FRDATE,Date TODATE){
        ViewObjectImpl vo = this.getJobworkReciptAgainstChallanOutwardVO1();
        System.out.println(LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
        
    if ( LV_UNIT != null &&  FRDATE != null && TODATE != null) {
        System.out.println("Inside condition!");
    try {

        
       
        vo.setNamedWhereClauseParam("P253_FROMDATE", FRDATE);
        vo.setNamedWhereClauseParam("P253_TODATE", TODATE);
        vo.setNamedWhereClauseParam("P253_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }


    /**
     * Container's getter for JobworkChallanOutwardVO1.
     * @return JobworkChallanOutwardVO1
     */
    public ViewObjectImpl getJobworkChallanOutwardVO1() {
        return (ViewObjectImpl) findViewObject("JobworkChallanOutwardVO1");
    }
    public void callJobworkChallanOutward(String LV_UNIT,Date FRDATE,Date TODATE , String LV_PRODUCTCD){
        ViewObjectImpl vo = this.getJobworkChallanOutwardVO1();
        System.out.println(LV_UNIT + "--"  + LV_PRODUCTCD + "--" + FRDATE + "--" + TODATE+"--");
        
    if ( LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_PRODUCTCD !=null) {
        System.out.println("Inside condition!");
    try {

        
       
        vo.setNamedWhereClauseParam("P252_FROMDATE", FRDATE);
        vo.setNamedWhereClauseParam("P252_TODATE", TODATE);
        vo.setNamedWhereClauseParam("P252_UNIT", LV_UNIT);
        vo.setNamedWhereClauseParam("P252_NEW", LV_PRODUCTCD);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }

    /**
     * Container's getter for PendingChallanforReceiveVO1.
     * @return PendingChallanforReceiveVO1
     */
    public ViewObjectImpl getPendingChallanforReceiveVO1() {
        return (ViewObjectImpl) findViewObject("PendingChallanforReceiveVO1");
    }
    
    
    public void callPendingChallanforReceive(String LV_UNIT,Date FRDATE,Date TODATE){
        ViewObjectImpl vo = this.getPendingChallanforReceiveVO1();
        System.out.println(LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
        
    if ( LV_UNIT != null &&  FRDATE != null && TODATE != null) {
        System.out.println("Inside condition!");
    try {

        
       
        vo.setNamedWhereClauseParam("P246_FROM", FRDATE);
        vo.setNamedWhereClauseParam("P246_TO", TODATE);
        vo.setNamedWhereClauseParam("P246_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }

    /**
     * Container's getter for ARNumberAgainstMRNITEMVO1.
     * @return ARNumberAgainstMRNITEMVO1
     */
    public ViewObjectImpl getARNumberAgainstMRNITEMVO1() {
        return (ViewObjectImpl) findViewObject("ARNumberAgainstMRNITEMVO1");
    }
    
    public void callARNumberAgainstMRNITEM(String LV_UNIT, String LV_GroupCd, String LV_SubGroupCd, String LV_ItemName,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getARNumberAgainstMRNITEMVO1();
          System.out.println(LV_UNIT + "--" + LV_GroupCd + "--"  + LV_SubGroupCd + "--"  + LV_ItemName + "--" + FRDATE + "--" + TODATE + "--"  );
          
      if (LV_UNIT != null && LV_GroupCd != null && LV_SubGroupCd != null && LV_ItemName != null && FRDATE != null && TODATE != null) {
          System.out.println("Inside condition!");
      try {
          vo.setNamedWhereClauseParam("P237_ITEM", LV_ItemName);
          vo.setNamedWhereClauseParam("P237_SUB_GROUP", LV_SubGroupCd);
          vo.setNamedWhereClauseParam("P237_GROUP", LV_GroupCd);
          vo.setNamedWhereClauseParam("P237_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P237_FROM_DATE", FRDATE);
          vo.setNamedWhereClauseParam("P237_TO_DATE", TODATE);

         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for PendingMainStoreReceivingVO1.
     * @return PendingMainStoreReceivingVO1
     */
    public ViewObjectImpl getPendingMainStoreReceivingVO1() {
        return (ViewObjectImpl) findViewObject("PendingMainStoreReceivingVO1");
    }
    
    public void callPendingMainStoreReceiving(String LV_UNIT ){
          ViewObjectImpl vo = this.getPendingMainStoreReceivingVO1();
          System.out.println( LV_UNIT + "--" );
          
      if (LV_UNIT != null  ) {
          System.out.println("Inside condition!");
      try {

          
          vo.setNamedWhereClauseParam("P234_UNIT_CD", LV_UNIT);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for PendingPOforGateEntryVO1.
     * @return PendingPOforGateEntryVO1
     */
    public ViewObjectImpl getPendingPOforGateEntryVO1() {
        return (ViewObjectImpl) findViewObject("PendingPOforGateEntryVO1");
    }

    /**
     * Container's getter for JWIssueagainstPurchaseOrderVO1.
     * @return JWIssueagainstPurchaseOrderVO1
     */
    public ViewObjectImpl getJWIssueagainstPurchaseOrderVO1() {
        return (ViewObjectImpl) findViewObject("JWIssueagainstPurchaseOrderVO1");
    }

    /**
     * Container's getter for GoodsinTransitVO1.
     * @return GoodsinTransitVO1
     */
    public ViewObjectImpl getGoodsinTransitVO1() {
        return (ViewObjectImpl) findViewObject("GoodsinTransitVO1");
    }
    public void callGoodsinTransit(String LV_UNIT,Date FRDATE,Date TODATE , String LV_CHALLANNO){
        ViewObjectImpl vo = this.getGoodsinTransitVO1();
        System.out.println(LV_UNIT + "--" + FRDATE + "--" + TODATE+"--" + LV_CHALLANNO);
        
    if ( LV_UNIT != null &&  FRDATE != null && TODATE != null && LV_CHALLANNO !=null) {
        System.out.println("Inside condition!");
    try {

        
        vo.setNamedWhereClauseParam("P201_UNIT", LV_UNIT);

        vo.setNamedWhereClauseParam("P201_FROM_DATE", FRDATE);
        vo.setNamedWhereClauseParam("P201_TO_DATE", TODATE);
        vo.setNamedWhereClauseParam("P201_CHALLAN_NO", LV_CHALLANNO);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }

    /**
     * Container's getter for PendingMRNforPurchaseInvoiceVO1.
     * @return PendingMRNforPurchaseInvoiceVO1
     */
    public ViewObjectImpl getPendingMRNforPurchaseInvoiceVO1() {
        return (ViewObjectImpl) findViewObject("PendingMRNforPurchaseInvoiceVO1");
    }
    public void callPendingMRNforPurchaseInvoice(Date FRDATE,Date TODATE ){
        ViewObjectImpl vo = this.getPendingMRNforPurchaseInvoiceVO1();
        System.out.println( FRDATE + "--" + TODATE+"--" );
        
    if (   FRDATE != null && TODATE != null ) {
        System.out.println("Inside condition!");
    try {

        
//        vo.setNamedWhereClauseParam("P201_UNIT", LV_UNIT);

        vo.setNamedWhereClauseParam("P184_FROM_DATE", FRDATE);
        vo.setNamedWhereClauseParam("P184_TO_DATE", TODATE);
//        vo.setNamedWhereClauseParam("P201_CHALLAN_NO", LV_CHALLANNO);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }


    /**
     * Container's getter for SRVDetailVO1.
     * @return SRVDetailVO1
     */
    public ViewObjectImpl getSRVDetailVO1() {
        return (ViewObjectImpl) findViewObject("SRVDetailVO1");
    }
    
    public void callSRVDetail(String LV_UNIT,String LV_LocationFilter, String LV_ITEM, String LV_GroupCd,
                              String LV_SubGroupCd, String LV_ApproveFilter, String LV_Statusfilter,Date FRDATE,Date TODATE){
          ViewObjectImpl vo = this.getSRVDetailVO1();
          System.out.println( LV_UNIT + "--" + LV_LocationFilter + "--" + LV_ITEM + "--" + LV_GroupCd + "--" + LV_SubGroupCd + "--" +
                              LV_ApproveFilter + "--" + LV_Statusfilter+"--" + FRDATE + "--" + TODATE+"--");
          
      if (LV_UNIT != null && LV_LocationFilter != null && LV_ITEM != null && LV_GroupCd != null && LV_SubGroupCd != null 
          && LV_ApproveFilter != null && LV_Statusfilter != null &&  FRDATE != null && TODATE != null  ) {
          System.out.println("Inside condition!");
      try {

          
         
          vo.setNamedWhereClauseParam("P15_FROM_DATE", FRDATE);     
          vo.setNamedWhereClauseParam("P15_TO_DATE", TODATE);
          vo.setNamedWhereClauseParam("P15_UNIT", LV_UNIT);
          vo.setNamedWhereClauseParam("P15_LOCATION", LV_LocationFilter);
          vo.setNamedWhereClauseParam("P15_ITEM", LV_ITEM);
          vo.setNamedWhereClauseParam("P15_GROUP_CODE", LV_GroupCd);
          vo.setNamedWhereClauseParam("P15_SUB_GROUP_CODE", LV_SubGroupCd);
          vo.setNamedWhereClauseParam("P15_AUTH_FLAG", LV_ApproveFilter);
          vo.setNamedWhereClauseParam("P15_STATUS_FLAG", LV_Statusfilter);
         
         
          vo.executeQuery();
          
      } catch (Exception e) {
          e.printStackTrace();
      
      }
      }
    
    }


    /**
     * Container's getter for TrialBalanceVO1.
     * @return TrialBalanceVO1
     */
    public ViewObjectImpl getTrialBalanceVO1() {
        return (ViewObjectImpl) findViewObject("TrialBalanceVO1");
    }
    public void callTrialBalance(String LV_UNIT, Integer LV_SID, Date FRDATE, Date TODATE){
        ViewObjectImpl vo = this.getTrialBalanceVO1();
    String LV_TYPE = "";
    
        System.out.println(LV_UNIT + "--" +  FRDATE +"--" + TODATE +"--"  /*LV_INV_TYPE + "--" + LV_CUST + "--"*/ );
        
        if (LV_UNIT != null && FRDATE !=null && TODATE !=null /*&& LV_INV_TYPE ==null && LV_CUST==null */){
            
            
            System.out.println("inside condition");
            
            try {

                callStoredProcedure("terms.gl_trial_proc_apx(?,?,?,?,?)", new Object[]
                                    {LV_UNIT,LV_TYPE,LV_SID,FRDATE,TODATE,});         
              
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
    //                vo.setNamedWhereClauseParam("P12_INC_CAN", LV_INC_CAN);
                
                     
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
            
        }
        
        
    }
    
    }


    /**
     * Container's getter for FGStockVO1.
     * @return FGStockVO1
     */
    public ViewObjectImpl getFGStockVO1() {
        return (ViewObjectImpl) findViewObject("FGStockVO1");
    }
    
    public void callFGStockproc(String LV_UNIT, String LV_SID ,Date FRDATE,Date TODATE){
        ViewObjectImpl vo = this.getFGStockVO1();
        System.out.println( LV_UNIT + "--" + LV_SID + "--" + FRDATE + "--" + TODATE+"--");
        
        
        if ( LV_UNIT != null && LV_SID != null && FRDATE != null && TODATE != null) {
            System.out.println("Inside condition!");
            try {
                

                callStoredProcedure("TERMS.PROC_Fg_Stock(?,?,?,?)", new Object[]
                                    {LV_SID , FRDATE, TODATE, LV_UNIT });         
               
                vo.setNamedWhereClauseParam("P48_UNIT", LV_UNIT);
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
    }
    
}


}


    /**
     * Container's getter for DailyStockStatementVO1.
     * @return DailyStockStatementVO1
     */
    public ViewObjectImpl getDailyStockStatementVO1() {
        return (ViewObjectImpl) findViewObject("DailyStockStatementVO1");
    }
    
    
    public void callDailyStockStatementproc(String LV_UNIT, String LV_SID ,String LV_LocationFilter ,Date FRDATE){
        ViewObjectImpl vo = this.getDailyStockStatementVO1();
        System.out.println( LV_UNIT + "--" + LV_SID + "--" + LV_LocationFilter + "--" + FRDATE+"--");
        
        
        if ( LV_UNIT != null && LV_SID != null && LV_LocationFilter != null && FRDATE != null) {
            System.out.println("Inside condition!");
            try {
                

                callStoredProcedure("TERMS.DPR_STOCK_STM(?,?,?,?)", new Object[]
                                    { FRDATE, LV_LocationFilter,LV_SID , LV_UNIT });         
               
                vo.setNamedWhereClauseParam("p84_unit", LV_UNIT);
                vo.setNamedWhereClauseParam("P84_loc", LV_LocationFilter);
                vo.setNamedWhereClauseParam("bindSession", LV_SID);
                vo.executeQuery();

            } catch (Exception e) {
                e.printStackTrace();
    }
    
    }


    }


    /**
     * Container's getter for ApprovedPurchaseIndentVO1.
     * @return ApprovedPurchaseIndentVO1
     */
    public ViewObjectImpl getApprovedPurchaseIndentVO1() {
        return (ViewObjectImpl) findViewObject("ApprovedPurchaseIndentVO1");
    }
    
    public void callApprovedPurchaseIndent(String LV_UNIT,Date FRDATE,Date TODATE){
        ViewObjectImpl vo = this.getApprovedPurchaseIndentVO1();
        System.out.println(LV_UNIT + "--"  + "--" + FRDATE + "--" + TODATE+"--");
        
    if ( LV_UNIT != null &&  FRDATE != null && TODATE != null) {
        System.out.println("Inside condition!");
    try {

        
       
        vo.setNamedWhereClauseParam("P85_NEW", FRDATE);
        vo.setNamedWhereClauseParam("P85_NEW_1", TODATE);
        vo.setNamedWhereClauseParam("P85_UNIT", LV_UNIT);
       
        vo.executeQuery();
        
        

    } catch (Exception e) {
        e.printStackTrace();
    
    }
    }
    }
    
    
}


